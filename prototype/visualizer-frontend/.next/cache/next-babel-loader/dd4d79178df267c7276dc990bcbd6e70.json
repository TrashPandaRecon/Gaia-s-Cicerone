{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/will/Desktop/dev/SDE/prototype/visualizer-frontend/src/components/BarChart.tsx\";\nimport React from 'react';\nimport * as d3 from 'd3';\nimport { useD3 } from './hooks/useD3';\nimport { GradientDefs, DiscreteColorLegend } from 'react-vis';\nimport { ENDPOINT } from '../config';\n\nconst socketIOClient = require('socket.io-client');\n\nclass BarChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      graphdata: [],\n      dataPipe: this.props.dataPipe,\n      endpoint: ENDPOINT,\n      yAxisName: this.props.yAxisName\n    };\n  }\n\n  componentDidMount() {\n    const {\n      endpoint,\n      dataPipe\n    } = this.state;\n    const socket = socketIOClient(endpoint);\n    socket.on(dataPipe, data => this.setState({\n      graphdata: data\n    }));\n  }\n\n  render() {\n    const {\n      graphdata,\n      yAxisName\n    } = this.state;\n    const ref = useD3(svg => {\n      const height = 500;\n      const width = 1000;\n      const margin = {\n        top: 20,\n        right: 30,\n        bottom: 30,\n        left: 40\n      };\n      const x = d3.scaleBand().domain(graphdata.map(d => d.x)).rangeRound([margin.left, width - margin.right]).padding(0.1);\n      const y1 = d3.scaleLinear().domain([0, d3.max(graphdata, d => d.y)]).rangeRound([height - margin.bottom, margin.top]);\n\n      const xAxis = g => g.attr('transform', `translate(0,${height - margin.bottom})`).call(d3.axisBottom(x).tickValues(d3.ticks(...d3.extent(x.domain()), width / 40).filter(v => x(v) !== undefined)).tickSizeOuter(0));\n\n      const y1Axis = g => g.attr('transform', `translate(${margin.left},0)`).style('color', 'steelblue').call(d3.axisLeft(y1).ticks(null, 's')).call(g => g.select('.domain').remove()).call(g => g.append('text').attr('x', -margin.left).attr('y', 10).attr('fill', 'currentColor').attr('text-anchor', 'start').text(y1));\n\n      svg.select('.x-axis').call(xAxis);\n      svg.select('.y-axis').call(y1Axis);\n      svg.select('.plot-area').attr('fill', 'steelblue').selectAll('.bar').graphdata(graphdata).join('rect').attr('class', 'bar').attr('x', d => x(d.x)).attr('width', x.bandwidth()).attr('y', d => y1(d.y)).attr('height', d => y1(0) - y1(d.y));\n    }, [graphdata.length]);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: ref,\n        style: {\n          height: 500,\n          width: '100%',\n          marginRight: '0px',\n          marginLeft: '0px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"g\", {\n          className: \"plot-area\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          className: \"x-axis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          className: \"y-axis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        height: 0,\n        width: 0,\n        children: /*#__PURE__*/_jsxDEV(GradientDefs, {\n          children: [/*#__PURE__*/_jsxDEV(\"pattern\", {\n            id: \"stripes\",\n            width: \"4\",\n            height: \"4\",\n            patternUnits: \"userSpaceOnUse\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M 0, 0 l 5, 5\",\n              stroke: \"steelblue\",\n              strokeLinecap: \"square\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"pattern\", {\n            id: \"circles\",\n            width: \"3\",\n            height: \"3\",\n            patternUnits: \"userSpaceOnUse\",\n            children: /*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: \"1.5\",\n              cy: \"1.5\",\n              r: \"0.8\",\n              fill: \"magenta\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DiscreteColorLegend, {\n        orientation: \"horizontal\",\n        width: 400,\n        items: [{\n          title: {\n            yAxisName\n          },\n          color: 'steelblue',\n          strokeWidth: 400\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default BarChart;","map":{"version":3,"sources":["/Users/will/Desktop/dev/SDE/prototype/visualizer-frontend/src/components/BarChart.tsx"],"names":["React","d3","useD3","GradientDefs","DiscreteColorLegend","ENDPOINT","socketIOClient","require","BarChart","Component","constructor","props","state","graphdata","dataPipe","endpoint","yAxisName","componentDidMount","socket","on","data","setState","render","ref","svg","height","width","margin","top","right","bottom","left","x","scaleBand","domain","map","d","rangeRound","padding","y1","scaleLinear","max","y","xAxis","g","attr","call","axisBottom","tickValues","ticks","extent","filter","v","undefined","tickSizeOuter","y1Axis","style","axisLeft","select","remove","append","text","selectAll","join","bandwidth","length","marginRight","marginLeft","title","color","strokeWidth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as d3 from 'd3';\nimport {useD3} from './hooks/useD3';\nimport {GradientDefs, DiscreteColorLegend} from 'react-vis';\nimport {ENDPOINT} from '../config';\nconst socketIOClient = require('socket.io-client');\ninterface XYResponseStruct {\n\tx: string;\n\ty: number;\n}\ninterface XYDataProps {\n\tgraphdata: XYResponseStruct[]\n    endpoint: string;\n    dataPipe: string;\n    yAxisName: string;\n}\n\n\nclass BarChart extends React.Component<{dataPipe:string,yAxisName:string},XYDataProps>{\n    constructor(props) {\n        super(props);\n        this.state = {\n            graphdata: [],\n            dataPipe: this.props.dataPipe,\n            endpoint: ENDPOINT,\n            yAxisName: this.props.yAxisName\n        }\n    }\n    componentDidMount() {\n        const {endpoint,dataPipe} = this.state;\n        const socket = socketIOClient(endpoint)\n        socket.on(dataPipe, (data) => \n            this.setState({graphdata: data})\n        )\n    }\n    render() {\n        const {graphdata, yAxisName} = this.state\n        const ref = useD3(\n            (svg) => {\n                const height = 500;\n                const width = 1000;\n                const margin = {top: 20, right: 30, bottom: 30, left: 40};\n\n                const x = d3\n                    .scaleBand()\n                    .domain(graphdata.map((d) => d.x))\n                    .rangeRound([margin.left, width - margin.right])\n                    .padding(0.1);\n\n                const y1 = d3\n                    .scaleLinear()\n                    .domain([0, d3.max(graphdata, (d) => d.y)])\n                    .rangeRound([height - margin.bottom, margin.top]);\n\n                const xAxis = (g) =>\n                    g.attr('transform', `translate(0,${height - margin.bottom})`).call(\n                        d3\n                            .axisBottom(x)\n                            .tickValues(\n                                d3\n                                    .ticks(...d3.extent(x.domain()), width / 40)\n                                    .filter((v) => x(v) !== undefined)\n                            )\n                            .tickSizeOuter(0)\n                    );\n\n                const y1Axis = (g) =>\n                    g\n                        .attr('transform', `translate(${margin.left},0)`)\n                        .style('color', 'steelblue')\n                        .call(d3.axisLeft(y1).ticks(null, 's'))\n                        .call((g) => g.select('.domain').remove())\n                        .call((g) =>\n                            g\n                                .append('text')\n                                .attr('x', -margin.left)\n                                .attr('y', 10)\n                                .attr('fill', 'currentColor')\n                                .attr('text-anchor', 'start')\n                                .text(y1)\n                        );\n\n                svg.select('.x-axis').call(xAxis);\n                svg.select('.y-axis').call(y1Axis);\n\n                svg\n                    .select('.plot-area')\n                    .attr('fill', 'steelblue')\n                    .selectAll('.bar')\n                    .graphdata(graphdata)\n                    .join('rect')\n                    .attr('class', 'bar')\n                    .attr('x', (d) => x(d.x))\n                    .attr('width', x.bandwidth())\n                    .attr('y', (d) => y1(d.y))\n                    .attr('height', (d) => y1(0) - y1(d.y));\n            \n                \n            },\n            [graphdata.length]\n        );\n\n        return (\n            <>\n                <svg\n                    ref={ref}\n                    style={{\n                        height: 500,\n                        width: '100%',\n                        marginRight: '0px',\n                        marginLeft: '0px',\n                    }}\n                >\n                    <g className=\"plot-area\" />\n                    <g className=\"x-axis\" />\n                    <g className=\"y-axis\" />\n                </svg>\n                <svg height={0} width={0}>\n                    <GradientDefs>\n                        <pattern\n                            id=\"stripes\"\n                            width=\"4\"\n                            height=\"4\"\n                            patternUnits=\"userSpaceOnUse\"\n                        >\n                            <path d=\"M 0, 0 l 5, 5\" stroke=\"steelblue\" strokeLinecap=\"square\" />\n                        </pattern>\n                        <pattern\n                            id=\"circles\"\n                            width=\"3\"\n                            height=\"3\"\n                            patternUnits=\"userSpaceOnUse\"\n                        >\n                            <circle cx=\"1.5\" cy=\"1.5\" r=\"0.8\" fill=\"magenta\" />\n                        </pattern>\n                    </GradientDefs>\n                </svg>\n                <DiscreteColorLegend\n                    orientation=\"horizontal\"\n                    width={400}\n                    items={[{title: {yAxisName}, color: 'steelblue', strokeWidth: 400}]}\n                />\n            </>\n        )\n    }\n}\n\nexport default BarChart;\n"]},"metadata":{},"sourceType":"module"}