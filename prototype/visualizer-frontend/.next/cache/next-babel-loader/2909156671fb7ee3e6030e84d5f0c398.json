{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/will/Desktop/dev/SDE/prototype/visualizer-frontend/src/components/LineChart.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport 'react-vis/dist/style.css';\nimport { SingletonSocket } from '../SingletonSocket';\nimport { XYPlot, XAxis, YAxis, LineSeries } from 'react-vis';\nimport * as d3 from 'd3';\nimport { Skeleton } from '@chakra-ui/react';\n\nvar BarChart = /*#__PURE__*/function (_React$Component) {\n  _inherits(BarChart, _React$Component);\n\n  var _super = _createSuper(BarChart);\n\n  function BarChart(props) {\n    var _this;\n\n    _classCallCheck(this, BarChart);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      graphdataStorage: [],\n      dataPipe: _this.props.dataPipe,\n      socketConnection: SingletonSocket.getInstance().getSocket()\n    };\n    return _this;\n  }\n\n  _createClass(BarChart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          dataPipe = _this$state.dataPipe,\n          socketConnection = _this$state.socketConnection,\n          graphdataStorage = _this$state.graphdataStorage;\n\n      var _loop = function _loop(i) {\n        socketConnection.on(dataPipe, function (data) {\n          graphdataStorage.splice(i, 0);\n\n          _this2.setState({\n            graphdataStorage: graphdataStorage\n          });\n        });\n      };\n\n      for (var i = 0; i < dataPipe.length; i++) {\n        _loop(i);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var graphdataStorage = this.state.graphdataStorage;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: graphdataStorage[0].graphData.length == 0 ? /*#__PURE__*/_jsxDEV(Skeleton, {\n          height: \"500px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 6\n        }, this) : /*#__PURE__*/_jsxDEV(XYPlot, {\n          dontCheckIfEmpty: true // xDomain={[graphdataStorage[0][0].x, graphdataStorage[0][].x]}\n          ,\n          xType: \"time\",\n          width: 750,\n          height: 500,\n          animation: true,\n          margin: {\n            bottom: 80,\n            left: 50,\n            right: 10,\n            top: 20\n          },\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            tickLabelAngle: -45,\n            tickTotal: 10\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            tickFormat: function tickFormat(tick) {\n              return d3.format('.2s')(tick);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), graphdataStorage.map(function (graphdata) {\n            return /*#__PURE__*/_jsxDEV(LineSeries, {\n              curve: 'curveMonotoneX',\n              data: graphdata,\n              opacity: 1,\n              strokeStyle: \"solid\",\n              style: {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, _this3);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 4\n      }, this);\n    }\n  }]);\n\n  return BarChart;\n}(React.Component);\n\nexport default BarChart;","map":{"version":3,"sources":["/Users/will/Desktop/dev/SDE/prototype/visualizer-frontend/src/components/LineChart.tsx"],"names":["React","SingletonSocket","XYPlot","XAxis","YAxis","LineSeries","d3","Skeleton","BarChart","props","state","graphdataStorage","dataPipe","socketConnection","getInstance","getSocket","i","on","data","splice","setState","length","graphData","bottom","left","right","top","tick","format","map","graphdata","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'react-vis/dist/style.css';\nimport { SingletonSocket } from '../SingletonSocket';\nimport {\n\tXYPlot,\n\tXAxis,\n\tYAxis,\n\tVerticalGridLines,\n\tHorizontalGridLines,\n\tVerticalBarSeries,\n\tVerticalBarSeriesCanvas,\n\tLabelSeries,\n\tLineSeries,\n} from 'react-vis';\nimport * as d3 from 'd3';\nimport { Skeleton, Spinner } from '@chakra-ui/react';\nimport { dataPipes } from '../config/dataPipeEnum';\ninterface XYResponseStruct {\n\tx: string;\n\ty: number;\n}\ninterface XYResponseGraphData {\n    graphData: XYResponseStruct[]\n}\ninterface XYDataProps {\n\tgraphdataStorage: XYResponseGraphData[];\n\tdataPipe: string[];\n\tsocketConnection: any;\n}\n\nclass BarChart extends React.Component<\n\t{ dataPipe: string[]; yAxisName: string },\n\tXYDataProps\n> {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tgraphdataStorage: [],\n\t\t\tdataPipe: this.props.dataPipe,\n\t\t\tsocketConnection: SingletonSocket.getInstance().getSocket(),\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n        const {dataPipe, socketConnection, graphdataStorage} = this.state;\n\t\tfor (let i = 0; i < dataPipe.length; i++) {\n            socketConnection.on(dataPipe, (data) => {\n                graphdataStorage.splice(i,0)\n\t\t\t\tthis.setState({ graphdataStorage: graphdataStorage});\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { graphdataStorage} = this.state;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{graphdataStorage[0].graphData.length == 0 ? (\n\t\t\t\t\t<Skeleton height=\"500px\"></Skeleton>\n\t\t\t\t) : (\n                    \n\t\t\t\t\t<XYPlot\n\t\t\t\t\t\tdontCheckIfEmpty={true}\n\t\t\t\t\t\t// xDomain={[graphdataStorage[0][0].x, graphdataStorage[0][].x]}\n\t\t\t\t\t\txType=\"time\"\n\t\t\t\t\t\twidth={750}\n\t\t\t\t\t\theight={500}\n\t\t\t\t\t\tanimation={true}\n\t\t\t\t\t\tmargin={{ bottom: 80, left: 50, right: 10, top: 20 }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<XAxis tickLabelAngle={-45} tickTotal={10} />\n                        <YAxis tickFormat={(tick) => d3.format('.2s')(tick)} />\n                            {graphdataStorage.map((graphdata) => (\n                                <LineSeries\n                                    curve={'curveMonotoneX'}\n                                    data={graphdata}\n                                    opacity={1}\n                                    strokeStyle=\"solid\"\n                                    style={{}}\n                                />))}\n\t\t\t\t\t</XYPlot>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default BarChart;\n"]},"metadata":{},"sourceType":"module"}