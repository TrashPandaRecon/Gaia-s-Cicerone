{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/will/Desktop/dev/SDE/prototype/visualizer-frontend/src/components/LineChart.tsx\";\nimport React from 'react';\nimport 'react-vis/dist/style.css';\nimport { SingletonSocket } from '../SingletonSocket';\nimport { XYPlot, XAxis, YAxis, LineSeries } from 'react-vis';\nimport * as d3 from 'd3';\nimport { Skeleton } from '@chakra-ui/react';\nimport { dataPipes } from '../config/dataPipeEnum';\n\nclass BarChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      graphdata: [],\n      dataPipe: this.props.dataPipe,\n      yAxisName: this.props.yAxisName,\n      socketConnection: SingletonSocket.getInstance().getSocket()\n    };\n  }\n\n  componentDidMount() {\n    const {\n      dataPipe,\n      socketConnection\n    } = this.state;\n    const LineStorage = [];\n\n    for (let i = 0; i < dataPipe.length; i++) {\n      socketConnection.on(dataPipe, data => {\n        this.setState({\n          graphdata: LineStorage[i] = data\n        });\n      });\n    }\n  }\n\n  render() {\n    const {\n      graphdata,\n      yAxisName\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: graphdata.length == 0 ? /*#__PURE__*/_jsxDEV(Skeleton, {\n        height: \"500px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(XYPlot, {\n        dontCheckIfEmpty: true,\n        xDomain: [graphdata[0].x, graphdata[graphdata.length - 1].x],\n        xType: \"time\",\n        width: 750,\n        height: 500,\n        animation: true,\n        margin: {\n          bottom: 80,\n          left: 50,\n          right: 10,\n          top: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(XAxis, {\n          tickLabelAngle: -45,\n          tickTotal: 10\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          tickFormat: tick => d3.format('.2s')(tick)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(LineSeries, {\n          curve: 'curveMonotoneX',\n          className: dataPipes.MDCSiteVisitorPerDay,\n          data: graphdata,\n          opacity: 1,\n          strokeStyle: \"solid\",\n          style: {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default BarChart;","map":{"version":3,"sources":["/Users/will/Desktop/dev/SDE/prototype/visualizer-frontend/src/components/LineChart.tsx"],"names":["React","SingletonSocket","XYPlot","XAxis","YAxis","LineSeries","d3","Skeleton","dataPipes","BarChart","Component","constructor","props","state","graphdata","dataPipe","yAxisName","socketConnection","getInstance","getSocket","componentDidMount","LineStorage","i","length","on","data","setState","render","x","bottom","left","right","top","tick","format","MDCSiteVisitorPerDay"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'react-vis/dist/style.css';\nimport { SingletonSocket } from '../SingletonSocket';\nimport DrawD3BarChart from './D3Components/DrawD3BarChart';\nimport {\n\tXYPlot,\n\tXAxis,\n\tYAxis,\n\tVerticalGridLines,\n\tHorizontalGridLines,\n\tVerticalBarSeries,\n\tVerticalBarSeriesCanvas,\n\tLabelSeries,\n\tLineSeries,\n} from 'react-vis';\nimport * as d3 from 'd3';\nimport { Skeleton, Spinner } from '@chakra-ui/react';\nimport { dataPipes } from '../config/dataPipeEnum';\ninterface XYResponseStruct {\n\tx: string;\n\ty: number;\n}\ninterface XYResponseGraphData {\n    graphData: XYResponseStruct[]\n}\ninterface XYDataProps {\n\tgraphdata: XYResponseGraphData[];\n\tdataPipe: string[];\n\tyAxisName: string;\n\tsocketConnection: any;\n}\n\nclass BarChart extends React.Component<\n\t{ dataPipe: string[]; yAxisName: string },\n\tXYDataProps\n> {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tgraphdata: [],\n\t\t\tdataPipe: this.props.dataPipe,\n\t\t\tyAxisName: this.props.yAxisName,\n\t\t\tsocketConnection: SingletonSocket.getInstance().getSocket(),\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n        const {dataPipe, socketConnection} = this.state;\n        const LineStorage = []\n\t\tfor (let i = 0; i < dataPipe.length; i++) {\n\t\t\tsocketConnection.on(dataPipe, (data) => {\n\t\t\t\tthis.setState({ graphdata: LineStorage[i] = data });\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { graphdata, yAxisName } = this.state;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{graphdata.length == 0 ? (\n\t\t\t\t\t<Skeleton height=\"500px\"></Skeleton>\n\t\t\t\t) : (\n                    \n\t\t\t\t\t<XYPlot\n\t\t\t\t\t\tdontCheckIfEmpty={true}\n\t\t\t\t\t\txDomain={[graphdata[0].x, graphdata[graphdata.length - 1].x]}\n\t\t\t\t\t\txType=\"time\"\n\t\t\t\t\t\twidth={750}\n\t\t\t\t\t\theight={500}\n\t\t\t\t\t\tanimation={true}\n\t\t\t\t\t\tmargin={{ bottom: 80, left: 50, right: 10, top: 20 }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<XAxis tickLabelAngle={-45} tickTotal={10} />\n\t\t\t\t\t\t<YAxis tickFormat={(tick) => d3.format('.2s')(tick)} />\n\t\t\t\t\t\t<LineSeries\n\t\t\t\t\t\t\tcurve={'curveMonotoneX'}\n\t\t\t\t\t\t\tclassName={dataPipes.MDCSiteVisitorPerDay}\n\t\t\t\t\t\t\tdata={graphdata}\n\t\t\t\t\t\t\topacity={1}\n\t\t\t\t\t\t\tstrokeStyle=\"solid\"\n\t\t\t\t\t\t\tstyle={{}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</XYPlot>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default BarChart;\n"]},"metadata":{},"sourceType":"module"}