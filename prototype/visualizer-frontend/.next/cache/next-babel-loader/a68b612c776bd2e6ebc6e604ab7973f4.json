{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { ENDPOINT } from \"./config\";\n\nvar socketIOClient = require('socket.io-client');\n\nexport var SingletonSocket = /*#__PURE__*/function () {\n  function SingletonSocket() {\n    _classCallCheck(this, SingletonSocket);\n\n    SingletonSocket.socket = socketIOClient(ENDPOINT);\n  }\n\n  _createClass(SingletonSocket, null, [{\n    key: \"getInstance\",\n    value: function getInstance() {\n      if (!SingletonSocket.instance) {\n        SingletonSocket.instance = new SingletonSocket();\n      }\n\n      return SingletonSocket.instance;\n    }\n  }, {\n    key: \"getSocket\",\n    value: function getSocket() {\n      return this.socket;\n    }\n  }]);\n\n  return SingletonSocket;\n}();\n\n_defineProperty(SingletonSocket, \"instance\", void 0);\n\n_defineProperty(SingletonSocket, \"socket\", void 0);","map":{"version":3,"sources":["/Users/will/Desktop/dev/SDE/prototype/visualizer-frontend/src/socket.ts"],"names":["ENDPOINT","socketIOClient","require","SingletonSocket","socket","instance"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,UAAvB;;AAEA,IAAMC,cAAc,GAAGC,OAAO,CAAC,kBAAD,CAA9B;;AACA,WAAaC,eAAb;AAGI,6BAAsB;AAAA;;AAClBA,IAAAA,eAAe,CAACC,MAAhB,GAAyBH,cAAc,CAACD,QAAD,CAAvC;AACH;;AALL;AAAA;AAAA,kCAMgC;AACxB,UAAI,CAACG,eAAe,CAACE,QAArB,EAA+B;AAC3BF,QAAAA,eAAe,CAACE,QAAhB,GAA2B,IAAIF,eAAJ,EAA3B;AACH;;AACD,aAAOA,eAAe,CAACE,QAAvB;AACH;AAXL;AAAA;AAAA,gCAY8B;AACtB,aAAO,KAAKD,MAAZ;AACH;AAdL;;AAAA;AAAA;;gBAAaD,e;;gBAAAA,e","sourcesContent":["import {ENDPOINT} from \"./config\";\n\nconst socketIOClient = require('socket.io-client');\nexport class SingletonSocket{\n    private static instance: SingletonSocket\n    private static socket:any\n    private constructor() {\n        SingletonSocket.socket = socketIOClient(ENDPOINT)\n    }\n    public static getInstance() {\n        if (!SingletonSocket.instance) {\n            SingletonSocket.instance = new SingletonSocket()\n        }\n        return SingletonSocket.instance\n    }\n    public static getSocket() {\n        return this.socket\n    }\n}"]},"metadata":{},"sourceType":"module"}