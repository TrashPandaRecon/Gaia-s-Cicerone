{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/will/Desktop/dev/SDE/prototype/visualizer-frontend/src/components/LineChart.tsx\";\nimport React from 'react';\nimport 'react-vis/dist/style.css';\nimport { SingletonSocket } from '../SingletonSocket';\nimport { XYPlot, XAxis, YAxis, LineSeries } from 'react-vis';\nimport * as d3 from 'd3';\nimport { Skeleton } from '@chakra-ui/react';\n\nclass BarChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      graphdataStorage: [],\n      dataPipe: this.props.dataPipe,\n      socketConnection: SingletonSocket.getInstance().getSocket()\n    };\n  }\n\n  componentDidMount() {\n    const {\n      dataPipe,\n      socketConnection,\n      graphdataStorage\n    } = this.state;\n    socketConnection.on(dataPipe[0], data => {\n      graphdataStorage.splice(0, 1, data);\n      this.setState({\n        graphdataStorage: graphdataStorage\n      });\n    });\n    socketConnection.on(dataPipe[1], data => {\n      graphdataStorage.splice(1, 1, data);\n      this.setState({\n        graphdataStorage: graphdataStorage\n      });\n    });\n    socketConnection.on(dataPipe[2], data => {\n      graphdataStorage.splice(2, 1, data);\n      this.setState({\n        graphdataStorage: graphdataStorage\n      });\n    });\n    socketConnection.on(dataPipe[3], data => {\n      graphdataStorage.splice(0, 1, data);\n      this.setState({\n        graphdataStorage: graphdataStorage\n      });\n    });\n    socketConnection.on(dataPipe[0], data => {\n      graphdataStorage.splice(0, 1, data);\n      this.setState({\n        graphdataStorage: graphdataStorage\n      });\n    });\n    socketConnection.on(dataPipe[0], data => {\n      graphdataStorage.splice(0, 1, data);\n      this.setState({\n        graphdataStorage: graphdataStorage\n      });\n    });\n  }\n\n  render() {\n    const {\n      graphdataStorage\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: graphdataStorage.length == 0 ? /*#__PURE__*/_jsxDEV(Skeleton, {\n        height: \"500px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(XYPlot, {\n        xType: \"time\",\n        width: 750,\n        height: 500,\n        animation: true,\n        margin: {\n          bottom: 80,\n          left: 50,\n          right: 10,\n          top: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(XAxis, {\n          tickLabelAngle: -45,\n          tickTotal: 10\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          tickFormat: tick => d3.format('.2s')(tick)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(LineSeries, {\n          curve: 'curveMonotoneX',\n          data: graphdataStorage[0],\n          opacity: 1,\n          strokeStyle: \"solid\",\n          style: {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(LineSeries, {\n          curve: 'curveMonotoneX',\n          data: graphdataStorage[1],\n          opacity: 1,\n          strokeStyle: \"solid\",\n          style: {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(LineSeries, {\n          curve: 'curveMonotoneX',\n          data: graphdataStorage[2],\n          opacity: 1,\n          strokeStyle: \"solid\",\n          style: {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(LineSeries, {\n          curve: 'curveMonotoneX',\n          data: graphdataStorage[3],\n          opacity: 1,\n          strokeStyle: \"solid\",\n          style: {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(LineSeries, {\n          curve: 'curveMonotoneX',\n          data: graphdataStorage[4],\n          opacity: 1,\n          strokeStyle: \"solid\",\n          style: {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 29\n        }, this), \")) }\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default BarChart;","map":{"version":3,"sources":["/Users/will/Desktop/dev/SDE/prototype/visualizer-frontend/src/components/LineChart.tsx"],"names":["React","SingletonSocket","XYPlot","XAxis","YAxis","LineSeries","d3","Skeleton","BarChart","Component","constructor","props","state","graphdataStorage","dataPipe","socketConnection","getInstance","getSocket","componentDidMount","on","data","splice","setState","render","length","bottom","left","right","top","tick","format"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'react-vis/dist/style.css';\nimport { SingletonSocket } from '../SingletonSocket';\nimport {\n\tXYPlot,\n\tXAxis,\n\tYAxis,\n\tVerticalGridLines,\n\tHorizontalGridLines,\n\tVerticalBarSeries,\n\tVerticalBarSeriesCanvas,\n\tLabelSeries,\n\tLineSeries,\n} from 'react-vis';\nimport * as d3 from 'd3';\nimport { Skeleton, Spinner } from '@chakra-ui/react';\nimport { dataPipes } from '../config/dataPipeEnum';\nimport {delay} from '../Util/delay';\ninterface XYResponseStruct {\n\tx: string;\n\ty: number;\n}\ninterface XYResponseGraphData {\n    graphData: XYResponseStruct[]\n}\ninterface XYDataProps {\n\tgraphdataStorage: XYResponseGraphData[];\n\tdataPipe: string[];\n\tsocketConnection: any;\n}\n\nclass BarChart extends React.Component<\n\t{ dataPipe: string[]; yAxisName: string },\n\tXYDataProps\n> {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tgraphdataStorage: [],\n\t\t\tdataPipe: this.props.dataPipe,\n\t\t\tsocketConnection: SingletonSocket.getInstance().getSocket(),\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n        const {dataPipe, socketConnection, graphdataStorage} = this.state;\n            socketConnection.on(dataPipe[0], (data) => {\n                graphdataStorage.splice(0, 1, data)\n\t\t\t\tthis.setState({ graphdataStorage: graphdataStorage});\n            });\n        socketConnection.on(dataPipe[1], (data) => {\n                graphdataStorage.splice(1, 1, data)\n\t\t\t\tthis.setState({ graphdataStorage: graphdataStorage});\n        });\n        socketConnection.on(dataPipe[2], (data) => {\n                graphdataStorage.splice(2, 1, data)\n\t\t\t\tthis.setState({ graphdataStorage: graphdataStorage});\n        });\n        socketConnection.on(dataPipe[3], (data) => {\n                graphdataStorage.splice(0, 1, data)\n\t\t\t\tthis.setState({ graphdataStorage: graphdataStorage});\n        });\n        socketConnection.on(dataPipe[0], (data) => {\n                graphdataStorage.splice(0, 1, data)\n\t\t\t\tthis.setState({ graphdataStorage: graphdataStorage});\n        });\n        socketConnection.on(dataPipe[0], (data) => {\n                graphdataStorage.splice(0, 1, data)\n\t\t\t\tthis.setState({ graphdataStorage: graphdataStorage});\n            });\n\t\t\n\t}\n\n\trender() {\n        const {graphdataStorage} = this.state;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{graphdataStorage.length == 0 ? (\n\t\t\t\t\t<Skeleton height=\"500px\"></Skeleton>\n\t\t\t\t) : (\n                    \n\t\t\t\t\t<XYPlot\n\t\t\t\t\t\txType=\"time\"\n\t\t\t\t\t\twidth={750}\n\t\t\t\t\t\theight={500}\n\t\t\t\t\t\tanimation={true}\n\t\t\t\t\t\tmargin={{ bottom: 80, left: 50, right: 10, top: 20 }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<XAxis tickLabelAngle={-45} tickTotal={10} />\n                            <YAxis tickFormat={(tick) => d3.format('.2s')(tick)} />\n                                <LineSeries\n                                    curve={'curveMonotoneX'}\n                                    data={graphdataStorage[0]}\n                                    opacity={1}\n                                    strokeStyle=\"solid\"\n                                    style={{}}\n                            />\n                            <LineSeries\n                                    curve={'curveMonotoneX'}\n                                    data={graphdataStorage[1]}\n                                    opacity={1}\n                                    strokeStyle=\"solid\"\n                                    style={{}}\n                            />\n                            <LineSeries\n                                    curve={'curveMonotoneX'}\n                                    data={graphdataStorage[2]}\n                                    opacity={1}\n                                    strokeStyle=\"solid\"\n                                    style={{}}\n                            />\n                            <LineSeries\n                                    curve={'curveMonotoneX'}\n                                    data={graphdataStorage[3]}\n                                    opacity={1}\n                                    strokeStyle=\"solid\"\n                                    style={{}}\n                            />\n                            <LineSeries\n                                    curve={'curveMonotoneX'}\n                                    data={graphdataStorage[4]}\n                                    opacity={1}\n                                    strokeStyle=\"solid\"\n                                    style={{}}\n                                />\n                                \n                            ))\n                            }\n                                \n                            \n\t\t\t\t\t</XYPlot>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default BarChart;\n"]},"metadata":{},"sourceType":"module"}