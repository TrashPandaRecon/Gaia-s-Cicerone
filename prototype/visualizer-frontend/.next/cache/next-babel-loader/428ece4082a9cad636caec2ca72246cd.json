{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/will/Desktop/dev/SDE/prototype/visualizer-frontend/src/components/LineChart.tsx\";\nimport React from 'react';\nimport 'react-vis/dist/style.css';\nimport { SingletonSocket } from '../SingletonSocket';\nimport { XYPlot, XAxis, YAxis, LineSeries } from 'react-vis';\nimport * as d3 from 'd3';\nimport { Skeleton } from '@chakra-ui/react';\n\nclass BarChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      graphdataStorage: [],\n      dataPipe: this.props.dataPipe,\n      socketConnection: SingletonSocket.getInstance().getSocket()\n    };\n  }\n\n  componentDidMount() {\n    const {\n      dataPipe,\n      socketConnection,\n      graphdataStorage\n    } = this.state;\n\n    for (let i = 0; i < dataPipe.length; i++) {\n      console.log(i);\n      socketConnection.on(dataPipe[i], data => {\n        graphdataStorage.splice(i, 1, data);\n        this.setState({\n          graphdataStorage: graphdataStorage\n        });\n      });\n    }\n  }\n\n  render() {\n    const {\n      graphdataStorage\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: graphdataStorage.length == 0 ? /*#__PURE__*/_jsxDEV(Skeleton, {\n        height: \"500px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(XYPlot, {\n        xType: \"time\",\n        width: 750,\n        height: 500,\n        animation: true,\n        margin: {\n          bottom: 80,\n          left: 50,\n          right: 10,\n          top: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(XAxis, {\n          tickLabelAngle: -45,\n          tickTotal: 10\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          tickFormat: tick => d3.format('.2s')(tick)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this), graphdataStorage.map(graphdata => /*#__PURE__*/_jsxDEV(LineSeries, {\n          curve: 'curveMonotoneX',\n          data: graphdata,\n          opacity: 1,\n          strokeStyle: \"solid\",\n          style: {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 33\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default BarChart;","map":{"version":3,"sources":["/Users/will/Desktop/dev/SDE/prototype/visualizer-frontend/src/components/LineChart.tsx"],"names":["React","SingletonSocket","XYPlot","XAxis","YAxis","LineSeries","d3","Skeleton","BarChart","Component","constructor","props","state","graphdataStorage","dataPipe","socketConnection","getInstance","getSocket","componentDidMount","i","length","console","log","on","data","splice","setState","render","bottom","left","right","top","tick","format","map","graphdata"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,0BAAP;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SACCC,MADD,EAECC,KAFD,EAGCC,KAHD,EASCC,UATD,QAUO,WAVP;AAWA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,SAASC,QAAT,QAAkC,kBAAlC;;AAeA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAGE;AACDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,gBAAgB,EAAE,EADN;AAEZC,MAAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWG,QAFT;AAGZC,MAAAA,gBAAgB,EAAEd,eAAe,CAACe,WAAhB,GAA8BC,SAA9B;AAHN,KAAb;AAKA;;AAEDC,EAAAA,iBAAiB,GAAG;AACb,UAAM;AAACJ,MAAAA,QAAD;AAAWC,MAAAA,gBAAX;AAA6BF,MAAAA;AAA7B,QAAiD,KAAKD,KAA5D;;AACA,SAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,QAAQ,CAACM,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtCE,MAAAA,OAAO,CAACC,GAAR,CAAYH,CAAZ;AACAJ,MAAAA,gBAAgB,CAACQ,EAAjB,CAAoBT,QAAQ,CAACK,CAAD,CAA5B,EAAkCK,IAAD,IAAU;AACvCX,QAAAA,gBAAgB,CAACY,MAAjB,CAAwBN,CAAxB,EAA0B,CAA1B,EAA4BK,IAA5B;AACZ,aAAKE,QAAL,CAAc;AAAEb,UAAAA,gBAAgB,EAAEA;AAApB,SAAd;AACS,OAHD;AAIT;AACD;;AAEDc,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEd,MAAAA;AAAF,QAAsB,KAAKD,KAAjC;AACA,wBACC;AAAA,gBACEC,gBAAgB,CAACO,MAAjB,IAA2B,CAA3B,gBACA,QAAC,QAAD;AAAU,QAAA,MAAM,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,cADA,gBAIA,QAAC,MAAD;AACC,QAAA,KAAK,EAAC,MADP;AAEC,QAAA,KAAK,EAAE,GAFR;AAGC,QAAA,MAAM,EAAE,GAHT;AAIC,QAAA,SAAS,EAAE,IAJZ;AAKC,QAAA,MAAM,EAAE;AAAEQ,UAAAA,MAAM,EAAE,EAAV;AAAcC,UAAAA,IAAI,EAAE,EAApB;AAAwBC,UAAAA,KAAK,EAAE,EAA/B;AAAmCC,UAAAA,GAAG,EAAE;AAAxC,SALT;AAAA,gCAOC,QAAC,KAAD;AAAO,UAAA,cAAc,EAAE,CAAC,EAAxB;AAA4B,UAAA,SAAS,EAAE;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAPD,eAQuB,QAAC,KAAD;AAAO,UAAA,UAAU,EAAGC,IAAD,IAAU1B,EAAE,CAAC2B,MAAH,CAAU,KAAV,EAAiBD,IAAjB;AAA7B;AAAA;AAAA;AAAA;AAAA,gBARvB,EAUwBnB,gBAAgB,CAACqB,GAAjB,CAAsBC,SAAD,iBAClB,QAAC,UAAD;AACI,UAAA,KAAK,EAAE,gBADX;AAEI,UAAA,IAAI,EAAEA,SAFV;AAGI,UAAA,OAAO,EAAE,CAHb;AAII,UAAA,WAAW,EAAC,OAJhB;AAKI,UAAA,KAAK,EAAE;AALX;AAAA;AAAA;AAAA;AAAA,gBADH,CAVxB;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,YADD;AAgCA;;AAvDA;;AA0DF,eAAe3B,QAAf","sourcesContent":["import React from 'react';\nimport 'react-vis/dist/style.css';\nimport { SingletonSocket } from '../SingletonSocket';\nimport {\n\tXYPlot,\n\tXAxis,\n\tYAxis,\n\tVerticalGridLines,\n\tHorizontalGridLines,\n\tVerticalBarSeries,\n\tVerticalBarSeriesCanvas,\n\tLabelSeries,\n\tLineSeries,\n} from 'react-vis';\nimport * as d3 from 'd3';\nimport { Skeleton, Spinner } from '@chakra-ui/react';\nimport { dataPipes } from '../config/dataPipeEnum';\ninterface XYResponseStruct {\n\tx: string;\n\ty: number;\n}\ninterface XYResponseGraphData {\n    graphData: XYResponseStruct[]\n}\ninterface XYDataProps {\n\tgraphdataStorage: XYResponseGraphData[];\n\tdataPipe: string[];\n\tsocketConnection: any;\n}\n\nclass BarChart extends React.Component<\n\t{ dataPipe: string[]; yAxisName: string },\n\tXYDataProps\n> {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tgraphdataStorage: [],\n\t\t\tdataPipe: this.props.dataPipe,\n\t\t\tsocketConnection: SingletonSocket.getInstance().getSocket(),\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n        const {dataPipe, socketConnection, graphdataStorage} = this.state;\n        for (let i = 0; i < dataPipe.length; i++) {\n            console.log(i)\n            socketConnection.on(dataPipe[i], (data) => {\n                graphdataStorage.splice(i,1,data)\n\t\t\t\tthis.setState({ graphdataStorage: graphdataStorage});\n            });\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { graphdataStorage} = this.state;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{graphdataStorage.length == 0 ? (\n\t\t\t\t\t<Skeleton height=\"500px\"></Skeleton>\n\t\t\t\t) : (\n                    \n\t\t\t\t\t<XYPlot\n\t\t\t\t\t\txType=\"time\"\n\t\t\t\t\t\twidth={750}\n\t\t\t\t\t\theight={500}\n\t\t\t\t\t\tanimation={true}\n\t\t\t\t\t\tmargin={{ bottom: 80, left: 50, right: 10, top: 20 }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<XAxis tickLabelAngle={-45} tickTotal={10} />\n                            <YAxis tickFormat={(tick) => d3.format('.2s')(tick)} />\n                            \n                            {graphdataStorage.map((graphdata) => (\n                                <LineSeries\n                                    curve={'curveMonotoneX'}\n                                    data={graphdata}\n                                    opacity={1}\n                                    strokeStyle=\"solid\"\n                                    style={{}}\n                                />\n                            ))\n                            }\n                                \n                            \n\t\t\t\t\t</XYPlot>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default BarChart;\n"]},"metadata":{},"sourceType":"module"}