{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/will/Desktop/dev/SDE/prototype/visualizer-frontend/src/components/RatingChart.tsx\";\nimport React from 'react';\nimport 'react-vis/dist/style.css';\nimport { SingletonSocket } from '../SingletonSocket';\nimport { RadialChart as RChart, CircularGridLines, DiscreteColorLegend, Hint } from 'react-vis';\nimport { Box, Flex, Grid, GridItem, Skeleton } from '@chakra-ui/react';\n\nclass RadialChart extends React.Component {\n  constructor(props) {\n    super(props);\n    var itemArray = [];\n    var datastore = [];\n\n    for (let i = 0; i < this.props.dataPipe.length; i++) {\n      itemArray.push({\n        title: this.props.dataPipe[i]\n      });\n      datastore.push({\n        angle: 1,\n        radius: 0.8,\n        label: this.props.dataPipe[i],\n        value: \"Fetching Data...\"\n      });\n    }\n\n    this.state = {\n      dataStorage: datastore,\n      dataPipe: this.props.dataPipe,\n      socketConnection: SingletonSocket.getInstance().getSocket(),\n      items: itemArray,\n      value: null\n    };\n  }\n\n  componentDidMount() {\n    const {\n      dataPipe,\n      socketConnection,\n      dataStorage\n    } = this.state;\n\n    for (let i = 0; i < dataPipe.length; i++) {\n      socketConnection.on(dataPipe[i], data => {\n        var scaledRadius = +(1 / 6 * 5 / 5 * data.radius).toFixed(7);\n        dataStorage.splice(i, 1, {\n          angle: 1,\n          radius: scaledRadius,\n          label: data.label,\n          subLabel: data.subLabel,\n          value: data.radius\n        });\n        this.setState({\n          dataStorage: dataStorage\n        });\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    const {\n      dataPipe,\n      socketConnection\n    } = this.state;\n\n    for (let i = 0; i < dataPipe.length; i++) {\n      socketConnection.off(dataPipe[i], data => {});\n    }\n  }\n\n  render() {\n    const {\n      dataStorage,\n      value,\n      items\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Flex, {\n      p: \"1\",\n      children: dataStorage.length != 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          h: this.props.height,\n          templateRows: \"repeat(8, 1fr)\",\n          gap: 1,\n          children: [/*#__PURE__*/_jsxDEV(GridItem, {\n            rowSpan: 4,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            children: /*#__PURE__*/_jsxDEV(RChart, {\n              width: this.props.width / 2,\n              height: this.props.height / 2,\n              data: dataStorage,\n              animation: true,\n              radius: this.props.width / 4,\n              onNearestXY: d => {\n                this.setState({\n                  value: d\n                });\n              },\n              children: [/*#__PURE__*/_jsxDEV(CircularGridLines, {\n                tickTotal: 5,\n                tickValues: [...new Array(6)].map((v, i) => i / 6 - 1),\n                style: {\n                  stroke: '#666262',\n                  strokeOpacity: 0.4\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 10\n              }, this), value && /*#__PURE__*/_jsxDEV(Hint, {\n                value: value,\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  maxW: \"sm\",\n                  borderWidth: \"1px\",\n                  borderRadius: \"lg\",\n                  overflow: \"hidden\",\n                  p: \"1\",\n                  bg: \"steelblue\",\n                  color: \"white\",\n                  fontSize: \"sm\",\n                  children: [/*#__PURE__*/_jsxDEV(Box, {\n                    children: value.label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 13\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    children: [\"Rating: \", value.value]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 13\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 12\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n            rowSpan: 4,\n            children: /*#__PURE__*/_jsxDEV(DiscreteColorLegend, {\n              orientation: \"vertical\",\n              height: this.props.height,\n              width: this.props.width // 20% of width taken as input from parent\n              ,\n              items: items,\n              padding: 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(Skeleton, {\n        height: (this.props.height * 2).toString() + 'px',\n        width: (this.props.width * 2).toString() + 'px'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default RadialChart;","map":{"version":3,"sources":["/Users/will/Desktop/dev/SDE/prototype/visualizer-frontend/src/components/RatingChart.tsx"],"names":["React","SingletonSocket","RadialChart","RChart","CircularGridLines","DiscreteColorLegend","Hint","Box","Flex","Grid","GridItem","Skeleton","Component","constructor","props","itemArray","datastore","i","dataPipe","length","push","title","angle","radius","label","value","state","dataStorage","socketConnection","getInstance","getSocket","items","componentDidMount","on","data","scaledRadius","toFixed","splice","subLabel","setState","componentWillUnmount","off","render","height","width","d","Array","map","v","stroke","strokeOpacity","toString"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'react-vis/dist/style.css';\nimport { SingletonSocket } from '../SingletonSocket';\nimport { RadialChart as RChart, CircularGridLines,DiscreteColorLegend,Hint } from 'react-vis';\nimport * as d3 from 'd3';\nimport { Box, Flex, Grid, GridItem, Skeleton } from '@chakra-ui/react';\nimport theme from '../theme';\nimport { ENETUNREACH } from 'constants';\n\n// This radial chart is specifically only for showing scores out of 5.\ninterface ResponseStruct {\n\tangle: number;\n\tradius: number;\n\tlabel: string;\n    subLabel?: string;\n    value: number | string;\n}\n\ninterface DataProps {\n\tdataStorage: ResponseStruct[];\n\tdataPipe: string[];\n\tsocketConnection: any;\n\tvalue?: any;\n\titems?: any;\n}\n\nclass RadialChart extends React.Component<\n\t{ dataPipe: string[]; height: number; width: number },\n\tDataProps\n> {\n\tconstructor(props) {\n\t\tsuper(props);\n        var itemArray = [];\n        var datastore =[]\n\t\tfor (let i = 0; i < this.props.dataPipe.length; i++) {\n            itemArray.push({title: this.props.dataPipe[i]});\n            datastore.push({\n\t\t\t\t\tangle: 1,\n\t\t\t\t\tradius: 0.8,\n                    label: this.props.dataPipe[i],\n                    value: \"Fetching Data...\",\n\t\t\t\t})\n        }\n        \n\t\tthis.state = {\n\t\t\tdataStorage: datastore,\n\t\t\tdataPipe: this.props.dataPipe,\n\t\t\tsocketConnection: SingletonSocket.getInstance().getSocket(),\n\t\t\titems: itemArray,\n\t\t\tvalue: null,\n\t\t};\n\t\t\n\t\t\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { dataPipe, socketConnection, dataStorage } = this.state;\n\n\t\tfor (let i = 0; i < dataPipe.length; i++) {\n\t\t\tsocketConnection.on(dataPipe[i], (data) => {\n\t\t\t\tvar scaledRadius = +((((1 / 6) * 5) / 5) * data.radius).toFixed(7);\n\t\t\t\tdataStorage.splice(i, 1, {\n\t\t\t\t\tangle: 1,\n\t\t\t\t\tradius: scaledRadius,\n                    label: data.label,\n                    subLabel: data.subLabel,\n                    value: data.radius,\n\t\t\t\t});\n\t\t\t\tthis.setState({ dataStorage: dataStorage });\n\t\t\t});\n\t\t}\n\t}\n\tcomponentWillUnmount() {\n\t\tconst { dataPipe, socketConnection } = this.state;\n\t\tfor (let i = 0; i < dataPipe.length; i++) {\n\t\t\tsocketConnection.off(dataPipe[i], (data) => {});\n\t\t}\n\t}\n\t\n\trender() {\n\t\tconst { dataStorage,value, items } = this.state;\n\n\t\treturn (\n\t\t\t<Flex p=\"1\">\n\t\t\t\t{dataStorage.length != 0 ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Grid h={this.props.height} templateRows=\"repeat(8, 1fr)\" gap={1}>\n\t\t\t\t\t\t\t<GridItem rowSpan={4} justifyContent=\"center\" alignItems=\"center\">\n\t\t\t\t\t\t\t\t<RChart\n\t\t\t\t\t\t\t\t\twidth={this.props.width / 2}\n\t\t\t\t\t\t\t\t\theight={this.props.height / 2}\n\t\t\t\t\t\t\t\t\tdata={dataStorage}\n\t\t\t\t\t\t\t\t\tanimation={true}\n\t\t\t\t\t\t\t\t\tradius={this.props.width / 4}\n\t\t\t\t\t\t\t\t\tonNearestXY={(d) => {\n\t\t\t\t\t\t\t\t\t\tthis.setState({ value: d });\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<CircularGridLines\n\t\t\t\t\t\t\t\t\t\ttickTotal={5}\n\t\t\t\t\t\t\t\t\t\ttickValues={[...new Array(6)].map((v, i) => i / 6 - 1)}\n\t\t\t\t\t\t\t\t\t\tstyle={{ stroke: '#666262', strokeOpacity: 0.4 }}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t{value && (\n\t\t\t\t\t\t\t\t\t\t<Hint value={value}>\n\t\t\t\t\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\t\t\t\t\tmaxW=\"sm\"\n\t\t\t\t\t\t\t\t\t\t\t\tborderWidth=\"1px\"\n\t\t\t\t\t\t\t\t\t\t\t\tborderRadius=\"lg\"\n\t\t\t\t\t\t\t\t\t\t\t\toverflow=\"hidden\"\n\t\t\t\t\t\t\t\t\t\t\t\tp=\"1\"\n\t\t\t\t\t\t\t\t\t\t\t\tbg=\"steelblue\"\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"white\"\n\t\t\t\t\t\t\t\t\t\t\t\tfontSize=\"sm\"\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<Box>{value.label}</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t<Box>Rating: {value.value}</Box>\n\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t</Hint>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</RChart>\n\t\t\t\t\t\t\t</GridItem>\n\t\t\t\t\t\t\t<GridItem rowSpan={4}>\n\t\t\t\t\t\t\t\t<DiscreteColorLegend\n\t\t\t\t\t\t\t\t\torientation=\"vertical\"\n\t\t\t\t\t\t\t\t\theight={this.props.height}\n\t\t\t\t\t\t\t\t\twidth={this.props.width} // 20% of width taken as input from parent\n\t\t\t\t\t\t\t\t\titems={items}\n\t\t\t\t\t\t\t\t\tpadding={1}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</GridItem>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<Skeleton\n\t\t\t\t\t\theight={(this.props.height * 2).toString() + 'px'}\n\t\t\t\t\t\twidth={(this.props.width * 2).toString() + 'px'}\n\t\t\t\t\t></Skeleton>\n\t\t\t\t)}\n\t\t\t</Flex>\n\t\t);\n\t}\n}\n\nexport default RadialChart;\n"]},"metadata":{},"sourceType":"module"}