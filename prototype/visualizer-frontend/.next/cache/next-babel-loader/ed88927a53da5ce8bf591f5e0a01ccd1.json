{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/will/Desktop/dev/SDE/prototype/visualizer-frontend/src/components/TimeSeriesLineMarkChart.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport 'react-vis/dist/style.css';\nimport { SingletonSocket } from '../SingletonSocket';\nimport { XYPlot, XAxis, YAxis, VerticalGridLines, HorizontalGridLines, LineMarkSeries, DiscreteColorLegend, Hint } from 'react-vis';\nimport * as d3 from 'd3';\nimport { Box, Flex, Grid, GridItem, Skeleton } from '@chakra-ui/react';\n\nvar TimeSeriesLineMarkChart = /*#__PURE__*/function (_React$Component) {\n  _inherits(TimeSeriesLineMarkChart, _React$Component);\n\n  var _super = _createSuper(TimeSeriesLineMarkChart);\n\n  function TimeSeriesLineMarkChart(props) {\n    var _this;\n\n    _classCallCheck(this, TimeSeriesLineMarkChart);\n\n    _this = _super.call(this, props);\n    var itemArray = [];\n\n    for (var i = 0; i < _this.props.dataPipe.length; i++) {\n      itemArray.push({\n        title: _this.props.dataPipe[i].split(' ')[0]\n      });\n    }\n\n    var dataStorage = [];\n\n    var _loop = function _loop(_i) {\n      SingletonSocket.getInstance().getSocket().on(_this.props.dataPipe[_i], function (data) {\n        dataStorage.push({\n          graphData: data,\n          Label: _this.props.dataPipe[_i]\n        });\n      });\n    };\n\n    for (var _i = 0; _i < _this.props.dataPipe.length; _i++) {\n      _loop(_i);\n    }\n\n    _this.state = {\n      graphdataStorage: dataStorage,\n      dataPipe: _this.props.dataPipe,\n      socketConnection: SingletonSocket.getInstance().getSocket(),\n      items: itemArray,\n      value: null\n    };\n    return _this;\n  }\n\n  _createClass(TimeSeriesLineMarkChart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          dataPipe = _this$state.dataPipe,\n          socketConnection = _this$state.socketConnection,\n          graphdataStorage = _this$state.graphdataStorage;\n\n      var _loop2 = function _loop2(i) {\n        socketConnection.on(dataPipe[i], function (data) {\n          graphdataStorage.splice(i, 1, {\n            graphData: data,\n            Label: dataPipe[i]\n          });\n\n          _this2.setState({\n            graphdataStorage: graphdataStorage\n          });\n        });\n      };\n\n      for (var i = 0; i < dataPipe.length; i++) {\n        _loop2(i);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _this$state2 = this.state,\n          dataPipe = _this$state2.dataPipe,\n          socketConnection = _this$state2.socketConnection;\n\n      for (var i = 0; i < dataPipe.length; i++) {\n        socketConnection.off(dataPipe[i], function (data) {});\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state3 = this.state,\n          graphdataStorage = _this$state3.graphdataStorage,\n          value = _this$state3.value,\n          items = _this$state3.items;\n      return /*#__PURE__*/_jsxDEV(Flex, {\n        p: \"1\",\n        children: graphdataStorage.length == 0 ? /*#__PURE__*/_jsxDEV(Skeleton, {\n          height: this.props.height.toString() + \"px\",\n          width: this.props.width.toString() + \"px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 6\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            h: this.props.height,\n            templateColumns: \"repeat(8, 1fr)\",\n            gap: 4,\n            children: [/*#__PURE__*/_jsxDEV(GridItem, {\n              colSpan: 7,\n              children: /*#__PURE__*/_jsxDEV(XYPlot, {\n                onMouseLeave: function onMouseLeave() {\n                  return _this3.setState({\n                    value: null\n                  });\n                },\n                xType: \"time\",\n                width: this.props.width / 5 * 4 // 80% of total width\n                ,\n                height: this.props.height,\n                animation: true,\n                margin: {\n                  bottom: 80,\n                  left: 50,\n                  right: 10,\n                  top: 20\n                },\n                children: [/*#__PURE__*/_jsxDEV(VerticalGridLines, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(HorizontalGridLines, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                  tickLabelAngle: -45,\n                  tickTotal: 10\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                  title: this.props.yLabel,\n                  tickFormat: function tickFormat(tick) {\n                    return d3.format('.2s')(tick);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 10\n                }, this), graphdataStorage.map(function (graphdata) {\n                  return /*#__PURE__*/_jsxDEV(LineMarkSeries, {\n                    curve: 'curveMonotoneX' //className={graphdata.Label}\n                    ,\n                    data: graphdata.graphData,\n                    opacity: 1,\n                    strokeStyle: \"solid\",\n                    style: {},\n                    onValueMouseOver: function onValueMouseOver(d) {\n                      _this3.setState({\n                        value: d\n                      });\n                    }\n                  }, graphdata.Label, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 11\n                  }, _this3);\n                }), value && /*#__PURE__*/_jsxDEV(Hint, {\n                  value: value,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    maxW: \"sm\",\n                    borderWidth: \"1px\",\n                    borderRadius: \"lg\",\n                    overflow: \"hidden\",\n                    p: \"1\",\n                    bg: \"steelblue\",\n                    color: \"white\",\n                    fontSize: \"sm\",\n                    children: [/*#__PURE__*/_jsxDEV(Box, {\n                      children: [\"Visitors: \", d3.format('.2s')(value.y)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 137,\n                      columnNumber: 13\n                    }, this), /*#__PURE__*/_jsxDEV(Box, {\n                      children: [\"Date: \", new Date(value.x).toLocaleDateString()]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 138,\n                      columnNumber: 13\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 12\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              colSpan: 1,\n              children: /*#__PURE__*/_jsxDEV(DiscreteColorLegend, {\n                orientation: \"vertical\",\n                height: this.props.height,\n                width: this.props.width / 5 // 20% of width taken as input from parent\n                ,\n                items: items,\n                padding: 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 7\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 4\n      }, this);\n    }\n  }]);\n\n  return TimeSeriesLineMarkChart;\n}(React.Component);\n\nexport default TimeSeriesLineMarkChart;","map":{"version":3,"sources":["/Users/will/Desktop/dev/SDE/prototype/visualizer-frontend/src/components/TimeSeriesLineMarkChart.tsx"],"names":["React","SingletonSocket","XYPlot","XAxis","YAxis","VerticalGridLines","HorizontalGridLines","LineMarkSeries","DiscreteColorLegend","Hint","d3","Box","Flex","Grid","GridItem","Skeleton","TimeSeriesLineMarkChart","props","itemArray","i","dataPipe","length","push","title","split","dataStorage","getInstance","getSocket","on","data","graphData","Label","state","graphdataStorage","socketConnection","items","value","splice","setState","off","height","toString","width","bottom","left","right","top","yLabel","tick","format","map","graphdata","d","y","Date","x","toLocaleDateString","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'react-vis/dist/style.css';\nimport { SingletonSocket } from '../SingletonSocket';\nimport {\n\tXYPlot,\n\tXAxis,\n\tYAxis,\n\tVerticalGridLines,\n\tHorizontalGridLines,\n\tVerticalBarSeries,\n\tVerticalBarSeriesCanvas,\n\tLabelSeries,\n\tLineMarkSeries,\n\tCrosshair,\n\tDiscreteColorLegend,\n\tHint,\n} from 'react-vis';\nimport * as d3 from 'd3';\nimport { Box, Flex, Grid, GridItem, Skeleton, Spinner } from '@chakra-ui/react';\nimport { dataPipes } from '../config/dataPipeEnum';\nimport { delay } from '../Util/delay';\ninterface XYResponseStruct {\n\tx: string;\n\ty: number;\n}\ninterface XYResponseGraphData {\n\tgraphData: XYResponseStruct[];\n\tLabel: string;\n}\ninterface XYDataProps {\n\tgraphdataStorage: XYResponseGraphData[];\n\tdataPipe: string[];\n\tsocketConnection: any;\n\tvalue?: any;\n    items?: any;\n}\n\nclass TimeSeriesLineMarkChart extends React.Component<{ dataPipe: string[], height:number,width:number,yLabel:string }, XYDataProps> {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tvar itemArray = [];\n\t\tfor (let i = 0; i < this.props.dataPipe.length; i++) {\n\t\t\titemArray.push({ title: this.props.dataPipe[i].split(' ')[0] });\n        }\n        var dataStorage = [];\n\t\t\t\tfor (let i = 0; i < this.props.dataPipe.length; i++) {\n\t\t\t\t\tSingletonSocket.getInstance()\n\t\t\t\t\t\t.getSocket()\n\t\t\t\t\t\t.on(this.props.dataPipe[i], (data) => {\n\t\t\t\t\t\t\tdataStorage.push({\n\t\t\t\t\t\t\t\tgraphData: data,\n\t\t\t\t\t\t\t\tLabel: this.props.dataPipe[i],\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\tthis.state = {\n\t\t\tgraphdataStorage: dataStorage,\n\t\t\tdataPipe: this.props.dataPipe,\n\t\t\tsocketConnection: SingletonSocket.getInstance().getSocket(),\n\t\t\titems: itemArray,\n            value: null,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { dataPipe, socketConnection, graphdataStorage } = this.state;\n\t\tfor (let i = 0; i < dataPipe.length; i++) {\n\t\t\tsocketConnection.on(dataPipe[i], (data) => {\n\t\t\t\tgraphdataStorage.splice(i, 1, { graphData: data, Label: dataPipe[i] });\n\t\t\t\tthis.setState({ graphdataStorage: graphdataStorage });\n\t\t\t});\n\t\t}\n\t}\n\tcomponentWillUnmount() {\n\t\tconst { dataPipe, socketConnection } = this.state;\n\t\tfor (let i = 0; i < dataPipe.length; i++) {\n\t\t\tsocketConnection.off(dataPipe[i], (data) => {});\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { graphdataStorage, value, items, } = this.state;\n\t\treturn (\n\t\t\t<Flex p=\"1\">\n\t\t\t\t{graphdataStorage.length == 0 ? (\n\t\t\t\t\t<Skeleton height={this.props.height.toString() + \"px\"} width={this.props.width.toString() + \"px\"}></Skeleton>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\th={this.props.height}\n\t\t\t\t\t\t\ttemplateColumns=\"repeat(8, 1fr)\"\n\t\t\t\t\t\t\tgap={4}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<GridItem colSpan={7}>\n\t\t\t\t\t\t\t\t<XYPlot\n\t\t\t\t\t\t\t\t\tonMouseLeave={() => this.setState({ value: null })}\n\t\t\t\t\t\t\t\t\txType=\"time\"\n\t\t\t\t\t\t\t\t\twidth={this.props.width/5*4} // 80% of total width\n\t\t\t\t\t\t\t\t\theight={this.props.height}\n\t\t\t\t\t\t\t\t\tanimation={true}\n\t\t\t\t\t\t\t\t\tmargin={{ bottom: 80, left: 50, right: 10, top: 20 }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<VerticalGridLines />\n\t\t\t\t\t\t\t\t\t<HorizontalGridLines />\n\t\t\t\t\t\t\t\t\t<XAxis tickLabelAngle={-45} tickTotal={10} />\n\t\t\t\t\t\t\t\t\t<YAxis\n\t\t\t\t\t\t\t\t\t\ttitle={this.props.yLabel}\n\t\t\t\t\t\t\t\t\t\ttickFormat={(tick) => d3.format('.2s')(tick)}\n\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t{graphdataStorage.map((graphdata) => (\n\t\t\t\t\t\t\t\t\t\t<LineMarkSeries\n\t\t\t\t\t\t\t\t\t\t\tcurve={'curveMonotoneX'}\n\t\t\t\t\t\t\t\t\t\t\t//className={graphdata.Label}\n\t\t\t\t\t\t\t\t\t\t\tkey={graphdata.Label}\n\t\t\t\t\t\t\t\t\t\t\tdata={graphdata.graphData}\n\t\t\t\t\t\t\t\t\t\t\topacity={1}\n\t\t\t\t\t\t\t\t\t\t\tstrokeStyle=\"solid\"\n\t\t\t\t\t\t\t\t\t\t\tstyle={{}}\n\t\t\t\t\t\t\t\t\t\t\tonValueMouseOver={(d) => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({ value: d });\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t{value && (\n\t\t\t\t\t\t\t\t\t\t<Hint value={value}>\n\t\t\t\t\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\t\t\t\t\tmaxW=\"sm\"\n\t\t\t\t\t\t\t\t\t\t\t\tborderWidth=\"1px\"\n\t\t\t\t\t\t\t\t\t\t\t\tborderRadius=\"lg\"\n\t\t\t\t\t\t\t\t\t\t\t\toverflow=\"hidden\"\n\t\t\t\t\t\t\t\t\t\t\t\tp=\"1\"\n\t\t\t\t\t\t\t\t\t\t\t\tbg=\"steelblue\"\n                                                    color=\"white\"\n                                                fontSize=\"sm\"\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<Box>Visitors: {d3.format('.2s')(value.y)}</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\tDate: {new Date(value.x).toLocaleDateString()}\n\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t</Hint>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</XYPlot>\n\t\t\t\t\t\t\t</GridItem>\n\t\t\t\t\t\t\t<GridItem colSpan={1}>\n\t\t\t\t\t\t\t\t<DiscreteColorLegend\n                                        orientation=\"vertical\"\n                                        height={this.props.height}\n                                        width={this.props.width / 5} // 20% of width taken as input from parent\n                                        items={items}\n                                        padding={1}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</GridItem>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</Flex>\n\t\t);\n\t}\n}\n\nexport default TimeSeriesLineMarkChart;\n"]},"metadata":{},"sourceType":"module"}