{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/will/Desktop/dev/SDE/prototype/visualizer-frontend/src/components/BarChart.tsx\";\nimport React from 'react';\nimport { SALESDATA } from '../data';\nimport { SingletonSocket } from '../SingletonSocket';\nimport { XYPlot, XAxis, YAxis, VerticalGridLines, HorizontalGridLines, VerticalBarSeries } from 'react-vis';\nimport * as d3 from 'd3';\nimport fonts from '../theme';\n\nclass BarChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      graphdata: [],\n      dataPipe: this.props.dataPipe,\n      yAxisName: this.props.yAxisName,\n      socketConnection: SingletonSocket.getInstance().getSocket()\n    };\n  }\n\n  componentDidMount() {\n    const {\n      dataPipe,\n      socketConnection\n    } = this.state;\n    socketConnection.on(dataPipe, data => {\n      this.setState({\n        graphdata: data\n      });\n    });\n  }\n\n  render() {\n    const {\n      graphdata,\n      yAxisName\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(XYPlot, {\n        xDomain: [SALESDATA[0].x, graphdata[graphdata.len - 1].x],\n        xType: \"time\",\n        width: 750,\n        height: 500 // xDistance={10}\n        ,\n        animate: true,\n        style: {\n          fontSize: fonts.fontSizes.sm\n        },\n        children: [/*#__PURE__*/_jsxDEV(VerticalGridLines, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(HorizontalGridLines, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          tickLabelAngle: -45\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          tickFormat: tick => d3.format('.2s')(tick)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(VerticalBarSeries, {\n          className: \"vertical-bar-series-example\",\n          data: SALESDATA\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default BarChart;","map":{"version":3,"sources":["/Users/will/Desktop/dev/SDE/prototype/visualizer-frontend/src/components/BarChart.tsx"],"names":["React","SALESDATA","SingletonSocket","XYPlot","XAxis","YAxis","VerticalGridLines","HorizontalGridLines","VerticalBarSeries","d3","fonts","BarChart","Component","constructor","props","state","graphdata","dataPipe","yAxisName","socketConnection","getInstance","getSocket","componentDidMount","on","data","setState","render","x","len","fontSize","fontSizes","sm","tick","format"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,SAA1B;AACA,SAASC,eAAT,QAAgC,oBAAhC;AAEA,SACCC,MADD,EAECC,KAFD,EAGCC,KAHD,EAICC,iBAJD,EAKCC,mBALD,EAMCC,iBAND,QASO,WATP;AAUA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AAIA,OAAOC,KAAP,MAAkB,UAAlB;;AAYA,MAAMC,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAGE;AACDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,SAAS,EAAE,EADC;AAEZC,MAAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWG,QAFT;AAGZC,MAAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWI,SAHV;AAIZC,MAAAA,gBAAgB,EAAEjB,eAAe,CAACkB,WAAhB,GAA8BC,SAA9B;AAJN,KAAb;AAMA;;AAEDC,EAAAA,iBAAiB,GAAG;AACnB,UAAM;AAAEL,MAAAA,QAAF;AAAYE,MAAAA;AAAZ,QAAiC,KAAKJ,KAA5C;AACAI,IAAAA,gBAAgB,CAACI,EAAjB,CAAoBN,QAApB,EAA+BO,IAAD,IAAU;AACvC,WAAKC,QAAL,CAAc;AAAET,QAAAA,SAAS,EAAEQ;AAAb,OAAd;AACA,KAFD;AAGA;;AAEDE,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEV,MAAAA,SAAF;AAAaE,MAAAA;AAAb,QAA2B,KAAKH,KAAtC;AAEA,wBACC;AAAA,6BACC,QAAC,MAAD;AACC,QAAA,OAAO,EAAE,CAACd,SAAS,CAAC,CAAD,CAAT,CAAa0B,CAAd,EAAgBX,SAAS,CAACA,SAAS,CAACY,GAAV,GAAc,CAAf,CAAT,CAA2BD,CAA3C,CADV;AAEC,QAAA,KAAK,EAAC,MAFP;AAGC,QAAA,KAAK,EAAE,GAHR;AAIC,QAAA,MAAM,EAAE,GAJT,CAKC;AALD;AAMC,QAAA,OAAO,MANR;AAOC,QAAA,KAAK,EAAE;AAAEE,UAAAA,QAAQ,EAAEnB,KAAK,CAACoB,SAAN,CAAgBC;AAA5B,SAPR;AAAA,gCASC,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,gBATD,eAUC,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,gBAVD,eAWC,QAAC,KAAD;AAAO,UAAA,cAAc,EAAE,CAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,gBAXD,eAYC,QAAC,KAAD;AAAO,UAAA,UAAU,EAAGC,IAAD,IAAUvB,EAAE,CAACwB,MAAH,CAAU,KAAV,EAAiBD,IAAjB;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAZD,eAaC,QAAC,iBAAD;AACC,UAAA,SAAS,EAAC,6BADX;AAEC,UAAA,IAAI,EAAE/B;AAFP;AAAA;AAAA;AAAA;AAAA,gBAbD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD;AAsBA;;AA3CA;;AA8CF,eAAeU,QAAf","sourcesContent":["import React from 'react';\nimport { SALESDATA } from '../data';\nimport { SingletonSocket } from '../SingletonSocket';\nimport DrawD3BarChart from './D3Components/DrawD3BarChart';\nimport {\n\tXYPlot,\n\tXAxis,\n\tYAxis,\n\tVerticalGridLines,\n\tHorizontalGridLines,\n\tVerticalBarSeries,\n\tVerticalBarSeriesCanvas,\n\tLabelSeries,\n} from 'react-vis';\nimport * as d3 from 'd3';\nimport { useTheme } from '@chakra-ui/react';\nimport { NavBarButtons } from './NavBarButtons';\nimport { formatWithOptions } from 'util';\nimport fonts from '../theme';\ninterface XYResponseStruct {\n\tx: string;\n\ty: number;\n}\ninterface XYDataProps {\n\tgraphdata: XYResponseStruct[];\n\tdataPipe: string;\n\tyAxisName: string;\n\tsocketConnection: any;\n}\n\nclass BarChart extends React.Component<\n\t{ dataPipe: string; yAxisName: string },\n\tXYDataProps\n> {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tgraphdata: [],\n\t\t\tdataPipe: this.props.dataPipe,\n\t\t\tyAxisName: this.props.yAxisName,\n\t\t\tsocketConnection: SingletonSocket.getInstance().getSocket(),\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { dataPipe, socketConnection } = this.state;\n\t\tsocketConnection.on(dataPipe, (data) => {\n\t\t\tthis.setState({ graphdata: data });\n\t\t});\n\t}\n\n\trender() {\n\t\tconst { graphdata, yAxisName } = this.state;\n       \n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<XYPlot\n\t\t\t\t\txDomain={[SALESDATA[0].x,graphdata[graphdata.len-1].x]}\n\t\t\t\t\txType=\"time\"\n\t\t\t\t\twidth={750}\n\t\t\t\t\theight={500}\n\t\t\t\t\t// xDistance={10}\n\t\t\t\t\tanimate\n\t\t\t\t\tstyle={{ fontSize: fonts.fontSizes.sm }}\n\t\t\t\t>\n\t\t\t\t\t<VerticalGridLines />\n\t\t\t\t\t<HorizontalGridLines />\n\t\t\t\t\t<XAxis tickLabelAngle={-45} />\n\t\t\t\t\t<YAxis tickFormat={(tick) => d3.format('.2s')(tick)} />\n\t\t\t\t\t<VerticalBarSeries\n\t\t\t\t\t\tclassName=\"vertical-bar-series-example\"\n\t\t\t\t\t\tdata={SALESDATA}\n\t\t\t\t\t/>\n\t\t\t\t</XYPlot>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default BarChart;\n"]},"metadata":{},"sourceType":"module"}