{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/will/Desktop/dev/SDE/prototype/visualizer-frontend/src/components/RatingChart.tsx\";\nimport React from 'react';\nimport 'react-vis/dist/style.css';\nimport { SingletonSocket } from '../SingletonSocket';\nimport { RadialChart as RChart, CircularGridLines, DiscreteColorLegend } from 'react-vis';\nimport { Flex, Skeleton } from '@chakra-ui/react';\n\nclass RadialChart extends React.Component {\n  constructor(props) {\n    super(props);\n    var itemArray = [];\n\n    for (let i = 0; i < this.props.dataPipe.length; i++) {\n      itemArray.push({\n        title: this.props.dataPipe[i]\n      });\n    }\n\n    this.state = {\n      dataStorage: [],\n      dataPipe: this.props.dataPipe,\n      socketConnection: SingletonSocket.getInstance().getSocket(),\n      items: itemArray,\n      value: null\n    };\n  }\n\n  componentDidMount() {\n    const {\n      dataPipe,\n      socketConnection,\n      dataStorage\n    } = this.state;\n\n    for (let i = 0; i < dataPipe.length; i++) {\n      socketConnection.on(dataPipe[i], data => {\n        var scaledRadius = +(1 / 6 * 5 / 5 * data.radius).toFixed(7);\n        dataStorage.splice(i, 1, {\n          angle: 1,\n          radius: scaledRadius,\n          label: data.label\n        });\n        this.setState({\n          dataStorage: dataStorage\n        });\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    const {\n      dataPipe,\n      socketConnection\n    } = this.state;\n\n    for (let i = 0; i < dataPipe.length; i++) {\n      socketConnection.off(dataPipe[i], data => {});\n    }\n  }\n\n  render() {\n    const {\n      dataStorage,\n      items\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Flex, {\n      p: \"1\",\n      children: dataStorage.length != 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(RChart, {\n          width: this.props.width / 5 * 4,\n          height: this.props.height,\n          data: dataStorage,\n          animation: true,\n          radius: this.props.width / 2,\n          children: /*#__PURE__*/_jsxDEV(CircularGridLines, {\n            tickValues: [...new Array(6)].map((v, i) => i / 6 - 1),\n            style: {\n              stroke: '#666262',\n              strokeOpacity: 0.4\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(DiscreteColorLegend, {\n          orientation: \"vertical\",\n          height: this.props.height,\n          width: this.props.width / 5 // 20% of width taken as input from parent\n          ,\n          items: items,\n          padding: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Skeleton, {\n        height: this.props.height.toString() + 'px',\n        width: this.props.width.toString() + 'px'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default RadialChart;","map":{"version":3,"sources":["/Users/will/Desktop/dev/SDE/prototype/visualizer-frontend/src/components/RatingChart.tsx"],"names":["React","SingletonSocket","RadialChart","RChart","CircularGridLines","DiscreteColorLegend","Flex","Skeleton","Component","constructor","props","itemArray","i","dataPipe","length","push","title","state","dataStorage","socketConnection","getInstance","getSocket","items","value","componentDidMount","on","data","scaledRadius","radius","toFixed","splice","angle","label","setState","componentWillUnmount","off","render","width","height","Array","map","v","stroke","strokeOpacity","toString"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'react-vis/dist/style.css';\nimport { SingletonSocket } from '../SingletonSocket';\nimport { RadialChart as RChart, CircularGridLines,DiscreteColorLegend } from 'react-vis';\nimport * as d3 from 'd3';\nimport { Box, Flex, Grid, GridItem, Skeleton } from '@chakra-ui/react';\nimport theme from '../theme';\nimport { ENETUNREACH } from 'constants';\n\n// This radial chart is specifically only for showing scores out of 5.\ninterface ResponseStruct {\n\tangle: number;\n\tradius: number;\n\tlabel: string;\n\tsubLabel?: string;\n}\n\ninterface DataProps {\n\tdataStorage: ResponseStruct[];\n\tdataPipe: string[];\n\tsocketConnection: any;\n\tvalue?: any;\n\titems?: any;\n}\n\nclass RadialChart extends React.Component<\n\t{ dataPipe: string[]; height: number; width: number },\n\tDataProps\n> {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tvar itemArray = [];\n\t\tfor (let i = 0; i < this.props.dataPipe.length; i++) {\n\t\t\titemArray.push({ title: this.props.dataPipe[i] });\n        }\n        \n\t\tthis.state = {\n\t\t\tdataStorage: [],\n\t\t\tdataPipe: this.props.dataPipe,\n\t\t\tsocketConnection: SingletonSocket.getInstance().getSocket(),\n\t\t\titems: itemArray,\n\t\t\tvalue: null,\n\t\t};\n\t\t\n\t\t\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { dataPipe, socketConnection, dataStorage } = this.state;\n\n\t\tfor (let i = 0; i < dataPipe.length; i++) {\n\t\t\tsocketConnection.on(dataPipe[i], (data) => {\n\t\t\t\tvar scaledRadius = +((((1 / 6) * 5) / 5) * data.radius).toFixed(7);\n\t\t\t\tdataStorage.splice(i, 1, {\n\t\t\t\t\tangle: 1,\n\t\t\t\t\tradius: scaledRadius,\n\t\t\t\t\tlabel: data.label,\n\t\t\t\t});\n\t\t\t\tthis.setState({ dataStorage: dataStorage });\n\t\t\t});\n\t\t}\n\t}\n\tcomponentWillUnmount() {\n\t\tconst { dataPipe, socketConnection } = this.state;\n\t\tfor (let i = 0; i < dataPipe.length; i++) {\n\t\t\tsocketConnection.off(dataPipe[i], (data) => {});\n\t\t}\n\t}\n\t\n\trender() {\n\t\tconst { dataStorage, items } = this.state;\n\n\t\treturn (\n\t\t\t<Flex p=\"1\">\n\t\t\t\t{dataStorage.length != 0 ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<RChart\n\t\t\t\t\t\t\twidth={this.props.width/5*4}\n\t\t\t\t\t\t\theight={this.props.height}\n\t\t\t\t\t\t\tdata={dataStorage}\n\t\t\t\t\t\t\tanimation={true}\n\t\t\t\t\t\t\tradius={this.props.width / 2}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<CircularGridLines\n\t\t\t\t\t\t\t\ttickValues={[...new Array(6)].map((v, i) => i / 6 - 1)}\n\t\t\t\t\t\t\t\tstyle={{ stroke: '#666262', strokeOpacity: 0.4 }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</RChart>\n\t\t\t\t\t\t<DiscreteColorLegend\n\t\t\t\t\t\t\torientation=\"vertical\"\n\t\t\t\t\t\t\theight={this.props.height}\n\t\t\t\t\t\t\twidth={this.props.width / 5} // 20% of width taken as input from parent\n\t\t\t\t\t\t\titems={items}\n\t\t\t\t\t\t\tpadding={1}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<Skeleton\n\t\t\t\t\t\theight={this.props.height.toString() + 'px'}\n\t\t\t\t\t\twidth={this.props.width.toString() + 'px'}\n\t\t\t\t\t></Skeleton>\n\t\t\t\t)}\n\t\t\t</Flex>\n\t\t);\n\t}\n}\n\nexport default RadialChart;\n"]},"metadata":{},"sourceType":"module"}