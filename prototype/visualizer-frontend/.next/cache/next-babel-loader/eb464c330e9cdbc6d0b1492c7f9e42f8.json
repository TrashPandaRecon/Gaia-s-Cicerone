{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/code/src/pages/index.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Box } from '@chakra-ui/react';\nimport React from 'react';\nimport { Hero } from '../components/Hero';\nimport { Container } from '../components/Container';\nimport { Main } from '../components/Main';\nimport { DarkModeSwitch } from '../components/DarkModeSwitch';\nimport { Footer } from '../components/Footer';\n\nvar socketIOClient = require('socket.io-client');\n\nvar ENDPOINT = 'http://localhost:30002';\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, {});\n    _this.state = {\n      salesresponse: [],\n      timeresponse: 0,\n      endpoint: ENDPOINT\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var endpoint = this.state.endpoint; //Very simply connect to the socket\n\n      var socket = socketIOClient(endpoint); //Listen for data on the \"outgoing data\" namespace and supply a callback for what to do when we get one. In this case, we set a state variable\n\n      socket.on('FromAPI', function (data) {\n        return _this2.setState({\n          timeresponse: data\n        });\n      });\n      socket.on('FromSalesData', function (data) {\n        return _this2.setState({\n          salesresponse: data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          timeresponse = _this$state.timeresponse,\n          salesresponse = _this$state.salesresponse;\n      salesresponse.r;\n      return /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Hero, {\n          title: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Main, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            children: [\"This is \", timeresponse]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Box, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(DarkModeSwitch, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {\n          children: \"Fancy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/code/src/pages/index.tsx"],"names":["Box","React","Hero","Container","Main","DarkModeSwitch","Footer","socketIOClient","require","ENDPOINT","App","state","salesresponse","timeresponse","endpoint","socket","on","data","setState","r","Component"],"mappings":";;;;;;;;;;;;AAAA,SAOIA,GAPJ,QAQO,kBARP;AASA,OAAOC,KAAP,MAA2C,OAA3C;AAEA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,cAAT,QAA+B,8BAA/B;AACA,SAASC,MAAT,QAAuB,sBAAvB;;AAGA,IAAMC,cAAc,GAAGC,OAAO,CAAC,kBAAD,CAA9B;;AACA,IAAMC,QAAQ,GAAG,wBAAjB;;IAOMC,G;;;;;AACL,iBAAc;AAAA;;AAAA;;AACP,8BAAM,EAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,aAAa,EAAE,EADN;AAElBC,MAAAA,YAAY,EAAE,CAFI;AAGlBC,MAAAA,QAAQ,EAAEL;AAHQ,KAAb;AAFO;AAOb;;;;wCAEmB;AAAA;;AAAA,UACXK,QADW,GACE,KAAKH,KADP,CACXG,QADW,EAEnB;;AACA,UAAMC,MAAM,GAAGR,cAAc,CAACO,QAAD,CAA7B,CAHmB,CAInB;;AACMC,MAAAA,MAAM,CAACC,EAAP,CAAU,SAAV,EAAqB,UAACC,IAAD;AAAA,eAAU,MAAI,CAACC,QAAL,CAAc;AAACL,UAAAA,YAAY,EAAEI;AAAf,SAAd,CAAV;AAAA,OAArB;AACAF,MAAAA,MAAM,CAACC,EAAP,CAAU,eAAV,EAA2B,UAACC,IAAD;AAAA,eAAU,MAAI,CAACC,QAAL,CAAc;AAACN,UAAAA,aAAa,EAAEK;AAAhB,SAAd,CAAV;AAAA,OAA3B;AAEN;;;6BAEQ;AAAA,wBACoC,KAAKN,KADzC;AAAA,UACKE,YADL,eACKA,YADL;AAAA,UACmBD,aADnB,eACmBA,aADnB;AAEFA,MAAAA,aAAa,CAACO,CAAd;AACN,0BACU,QAAC,SAAD;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,KAAK,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD;AAAA,kCACI,QAAC,GAAD;AAAA,mCAAcN,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAQI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,gBARJ,eASI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADV;AAaA;;;;EApCgBZ,KAAK,CAACmB,S;;AAsCxB,eAAeV,GAAf","sourcesContent":["import {\n\tCode,\n\tList,\n\tListItem,\n\tListIcon,\n\tLink as ChakraLink,\n\tText,\n    Box,\n} from '@chakra-ui/react';\nimport React, { useState, useEffect } from 'react';\nimport { CheckCircleIcon, LinkIcon } from '@chakra-ui/icons';\nimport { Hero } from '../components/Hero';\nimport { Container } from '../components/Container';\nimport { Main } from '../components/Main';\nimport { DarkModeSwitch } from '../components/DarkModeSwitch';\nimport { Footer } from '../components/Footer';\nimport BarChart from '../components/BarChart';\nimport {SALESDATA} from '../data';\nconst socketIOClient = require('socket.io-client');\nconst ENDPOINT = 'http://localhost:30002';\ninterface indexProps {\n    endpoint: string\n    salesresponse: any\n    timeresponse: number\n}\n\nclass App extends React.Component<{},indexProps> {\n\tconstructor() {\n        super({});\n        this.state = {\n            salesresponse: [],\n\t\t\ttimeresponse: 0,\n\t\t\tendpoint: ENDPOINT,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { endpoint } = this.state;\n\t\t//Very simply connect to the socket\n\t\tconst socket = socketIOClient(endpoint);\n\t\t//Listen for data on the \"outgoing data\" namespace and supply a callback for what to do when we get one. In this case, we set a state variable\n        socket.on('FromAPI', (data) => this.setState({timeresponse: data}));\n        socket.on('FromSalesData', (data) => this.setState({salesresponse: data}))\n        \n\t}\n\n\trender() {\n        const {timeresponse, salesresponse} = this.state;\n        salesresponse.r\n\t\treturn (\n            <Container>\n                <Hero title=\"\"/>\n                <Main>\n                    <Box>This is {timeresponse}</Box>\n                    <Box>\n                       \n                    </Box>\n                </Main>\n                <DarkModeSwitch></DarkModeSwitch>\n                <Footer>Fancy</Footer>\n            </Container>\n\t\t);\n\t}\n}\nexport default App"]},"metadata":{},"sourceType":"module"}