{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/will/Desktop/dev/SDE/prototype/visualizer-frontend/src/components/BarChart.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport 'react-vis/dist/style.css';\nimport { SingletonSocket } from '../SingletonSocket';\nimport { XYPlot, XAxis, YAxis, LineSeries } from 'react-vis';\nimport * as d3 from 'd3';\n\nvar BarChart = /*#__PURE__*/function (_React$Component) {\n  _inherits(BarChart, _React$Component);\n\n  var _super = _createSuper(BarChart);\n\n  function BarChart(props) {\n    var _this;\n\n    _classCallCheck(this, BarChart);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      graphdata: [],\n      dataPipe: _this.props.dataPipe,\n      yAxisName: _this.props.yAxisName,\n      socketConnection: SingletonSocket.getInstance().getSocket()\n    };\n    return _this;\n  }\n\n  _createClass(BarChart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          dataPipe = _this$state.dataPipe,\n          socketConnection = _this$state.socketConnection;\n      socketConnection.on(dataPipe, function (data) {\n        _this2.setState({\n          graphdata: data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          graphdata = _this$state2.graphdata,\n          yAxisName = _this$state2.yAxisName;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(XYPlot, {\n          dontCheckIfEmpty: true,\n          xDomain: [graphdata[0].x, graphdata[graphdata.length - 1].x],\n          xType: \"time\",\n          width: 750,\n          height: 500,\n          animation: true,\n          margin: {\n            bottom: 80,\n            left: 50,\n            right: 10,\n            top: 20\n          },\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            tickLabelAngle: -45,\n            tickTotal: 10\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            tickFormat: function tickFormat(tick) {\n              return d3.format('.2s')(tick);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(LineSeries, {\n            curve: 'curveMonotoneX',\n            className: \"vertical-bar-series-example\",\n            data: graphdata,\n            opacity: 1,\n            strokeStyle: \"solid\",\n            style: {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), \")}\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 4\n      }, this);\n    }\n  }]);\n\n  return BarChart;\n}(React.Component);\n\nexport default BarChart;","map":{"version":3,"sources":["/Users/will/Desktop/dev/SDE/prototype/visualizer-frontend/src/components/BarChart.tsx"],"names":["React","SingletonSocket","XYPlot","XAxis","YAxis","LineSeries","d3","BarChart","props","state","graphdata","dataPipe","yAxisName","socketConnection","getInstance","getSocket","on","data","setState","x","length","bottom","left","right","top","tick","format","Component"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,0BAAP;AACA,SAASC,eAAT,QAAgC,oBAAhC;AAEA,SACCC,MADD,EAECC,KAFD,EAGCC,KAHD,EASIC,UATJ,QAUO,WAVP;AAWA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;IAaMC,Q;;;;;AAIL,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACZC,MAAAA,SAAS,EAAE,EADC;AAEZC,MAAAA,QAAQ,EAAE,MAAKH,KAAL,CAAWG,QAFT;AAGZC,MAAAA,SAAS,EAAE,MAAKJ,KAAL,CAAWI,SAHV;AAIZC,MAAAA,gBAAgB,EAAEZ,eAAe,CAACa,WAAhB,GAA8BC,SAA9B;AAJN,KAAb;AAFkB;AAQlB;;;;wCAEmB;AAAA;;AAAA,wBACoB,KAAKN,KADzB;AAAA,UACXE,QADW,eACXA,QADW;AAAA,UACDE,gBADC,eACDA,gBADC;AAEnBA,MAAAA,gBAAgB,CAACG,EAAjB,CAAoBL,QAApB,EAA8B,UAACM,IAAD,EAAU;AACvC,QAAA,MAAI,CAACC,QAAL,CAAc;AAAER,UAAAA,SAAS,EAAEO;AAAb,SAAd;AACA,OAFD;AAGA;;;6BAEQ;AAAA,yBACyB,KAAKR,KAD9B;AAAA,UACAC,SADA,gBACAA,SADA;AAAA,UACWE,SADX,gBACWA,SADX;AAGR,0BACC;AAAA,gCAIqB,QAAC,MAAD;AACI,UAAA,gBAAgB,EAAE,IADtB;AAEI,UAAA,OAAO,EAAE,CAACF,SAAS,CAAC,CAAD,CAAT,CAAaS,CAAd,EAAiBT,SAAS,CAACA,SAAS,CAACU,MAAV,GAAmB,CAApB,CAAT,CAAgCD,CAAjD,CAFb;AAGlB,UAAA,KAAK,EAAC,MAHY;AAIlB,UAAA,KAAK,EAAE,GAJW;AAKlB,UAAA,MAAM,EAAE,GALU;AAMlB,UAAA,SAAS,EAAE,IANO;AAOlB,UAAA,MAAM,EAAE;AAAEE,YAAAA,MAAM,EAAE,EAAV;AAAcC,YAAAA,IAAI,EAAE,EAApB;AAAwBC,YAAAA,KAAK,EAAE,EAA/B;AAAmCC,YAAAA,GAAG,EAAE;AAAxC,WAPU;AAAA,kCASlB,QAAC,KAAD;AAAO,YAAA,cAAc,EAAE,CAAC,EAAxB;AAA4B,YAAA,SAAS,EAAE;AAAvC;AAAA;AAAA;AAAA;AAAA,kBATkB,eAUI,QAAC,KAAD;AAAO,YAAA,UAAU,EAAE,oBAACC,IAAD;AAAA,qBAAUnB,EAAE,CAACoB,MAAH,CAAU,KAAV,EAAiBD,IAAjB,CAAV;AAAA;AAAnB;AAAA;AAAA;AAAA;AAAA,kBAVJ,eAWlB,QAAC,UAAD;AACC,YAAA,KAAK,EAAE,gBADR;AAEC,YAAA,SAAS,EAAC,6BAFX;AAGC,YAAA,IAAI,EAAEf,SAHP;AAIC,YAAA,OAAO,EAAE,CAJV;AAKC,YAAA,WAAW,EAAC,OALb;AAMC,YAAA,KAAK,EAAE;AANR;AAAA;AAAA;AAAA;AAAA,kBAXkB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJrB;AAAA;AAAA;AAAA;AAAA;AAAA,cADD;AA4BA;;;;EApDqBV,KAAK,CAAC2B,S;;AAuD7B,eAAepB,QAAf","sourcesContent":["import React from 'react';\nimport 'react-vis/dist/style.css';\nimport { SingletonSocket } from '../SingletonSocket';\nimport DrawD3BarChart from './D3Components/DrawD3BarChart';\nimport {\n\tXYPlot,\n\tXAxis,\n\tYAxis,\n\tVerticalGridLines,\n\tHorizontalGridLines,\n\tVerticalBarSeries,\n\tVerticalBarSeriesCanvas,\n    LabelSeries,\n    LineSeries,\n} from 'react-vis';\nimport * as d3 from 'd3';\nimport { Spinner} from '@chakra-ui/react';\ninterface XYResponseStruct {\n\tx: string;\n\ty: number;\n}\ninterface XYDataProps {\n\tgraphdata: XYResponseStruct[];\n\tdataPipe: string;\n\tyAxisName: string;\n\tsocketConnection: any;\n}\n\nclass BarChart extends React.Component<\n\t{ dataPipe: string; yAxisName: string },\n\tXYDataProps\n> {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tgraphdata: [],\n\t\t\tdataPipe: this.props.dataPipe,\n\t\t\tyAxisName: this.props.yAxisName,\n\t\t\tsocketConnection: SingletonSocket.getInstance().getSocket(),\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { dataPipe, socketConnection } = this.state;\n\t\tsocketConnection.on(dataPipe, (data) => {\n\t\t\tthis.setState({ graphdata: data });\n\t\t});\n\t}\n\n\trender() {\n\t\tconst { graphdata, yAxisName } = this.state;\n       \n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{/* {graphdata.length == 0 ? (\n\t\t\t\t\t<Spinner></Spinner>\n\t\t\t\t) : ( */}\n                        <XYPlot\n                            dontCheckIfEmpty={true}\n                            xDomain={[graphdata[0].x, graphdata[graphdata.length - 1].x]}\n\t\t\t\t\t\txType=\"time\"\n\t\t\t\t\t\twidth={750}\n\t\t\t\t\t\theight={500}\n\t\t\t\t\t\tanimation={true}\n\t\t\t\t\t\tmargin={{ bottom: 80, left: 50, right: 10, top: 20 }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<XAxis tickLabelAngle={-45} tickTotal={10} />\n                            <YAxis tickFormat={(tick) => d3.format('.2s')(tick)} />\n\t\t\t\t\t\t<LineSeries\n\t\t\t\t\t\t\tcurve={'curveMonotoneX'}\n\t\t\t\t\t\t\tclassName=\"vertical-bar-series-example\"\n\t\t\t\t\t\t\tdata={graphdata}\n\t\t\t\t\t\t\topacity={1}\n\t\t\t\t\t\t\tstrokeStyle=\"solid\"\n\t\t\t\t\t\t\tstyle={{}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</XYPlot>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default BarChart;\n"]},"metadata":{},"sourceType":"module"}