{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/will/Desktop/dev/SDE/prototype/visualizer-frontend/src/components/SocialNodeGraph.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Box, Grid, GridItem, Spinner } from '@chakra-ui/react';\nimport React from 'react';\nimport { scaleCategory20 } from 'd3-scale';\nimport { InteractiveForceGraph, ForceGraphNode, ForceGraphLink // Hint as forceHint,\n} from 'react-vis-force';\nimport { ENDPOINT } from '../config';\n\nvar socketIOClient = require('socket.io-client'); // data structure definitions for NodeGraph component\n\n\nvar SocialNodeGraph = /*#__PURE__*/function (_React$Component) {\n  _inherits(SocialNodeGraph, _React$Component);\n\n  var _super = _createSuper(SocialNodeGraph);\n\n  function SocialNodeGraph(props) {\n    var _this;\n\n    _classCallCheck(this, SocialNodeGraph);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"_forgetValue\", function () {\n      _this.setState({\n        value: null\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_rememberValue\", function (value) {\n      _this.setState({\n        value: value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"scale\", scaleCategory20());\n\n    _this.state = {\n      value: null,\n      socialdataresponse: {\n        nodes: [],\n        links: []\n      },\n      endpoint: ENDPOINT\n    };\n    return _this;\n  }\n\n  _createClass(SocialNodeGraph, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var endpoint = this.state.endpoint; //Very simply connect to the socket\n\n      var socket = socketIOClient(endpoint); //Listen for data on the \"outgoing data\" namespace and supply a callback for what to do when we get one. In this case, we set a state variable\n\n      socket.on('FromSocialNodeData', function (data) {\n        return _this2.setState({\n          socialdataresponse: data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          socialdataresponse = _this$state.socialdataresponse,\n          value = _this$state.value;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          h: \"200px\",\n          templateRows: \"repeat(2, 1fr)\",\n          templateColumns: \"repeat(5, 1fr)\",\n          gap: 4,\n          children: [/*#__PURE__*/_jsxDEV(GridItem, {\n            rowSpan: 1,\n            colSpan: 4,\n            bg: \"tomato\",\n            children: /*#__PURE__*/_jsxDEV(InteractiveForceGraph, {\n              animation: \"wobbly\",\n              simulationOptions: {\n                height: 500,\n                width: 1000,\n                alpha: 1,\n                animate: true\n              },\n              labelAttr: \"label\",\n              highlightDependencies: true,\n              onSelectNode: function onSelectNode(node) {\n                _this3.setState({\n                  value: 'HI'\n                });\n\n                _this3.forceUpdate();\n              },\n              onDeselectNode: this._forgetValue,\n              children: [socialdataresponse.nodes.length == 0 ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 10\n              }, this) : socialdataresponse.nodes.map(function (node) {\n                return /*#__PURE__*/_jsxDEV(ForceGraphNode, {\n                  node: {\n                    id: node.id,\n                    label: node.id,\n                    income: node.income,\n                    radius: Math.ceil(node.income / 1000 % 10)\n                  },\n                  fill: _this3.scale(Math.ceil(node.income / 1000 % 10))\n                }, node.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 11\n                }, _this3);\n              }), socialdataresponse.nodes.length == 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : socialdataresponse.links.map(function (link) {\n                return /*#__PURE__*/_jsxDEV(ForceGraphLink, {\n                  link: {\n                    source: link.source,\n                    target: link.target\n                  },\n                  fill: \"blue\"\n                }, link.source + link.target, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 11\n                }, _this3);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n            colSpan: 1,\n            bg: \"papayawhip\",\n            children: value ? /*#__PURE__*/_jsxDEV(Box, {\n              value: value,\n              children: value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 34\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }, this)\n      }, void 0, false);\n    }\n  }]);\n\n  return SocialNodeGraph;\n}(React.Component);\n\nexport default SocialNodeGraph;","map":{"version":3,"sources":["/Users/will/Desktop/dev/SDE/prototype/visualizer-frontend/src/components/SocialNodeGraph.tsx"],"names":["Box","Grid","GridItem","Spinner","React","scaleCategory20","InteractiveForceGraph","ForceGraphNode","ForceGraphLink","ENDPOINT","socketIOClient","require","SocialNodeGraph","props","setState","value","state","socialdataresponse","nodes","links","endpoint","socket","on","data","height","width","alpha","animate","node","forceUpdate","_forgetValue","length","map","id","label","income","radius","Math","ceil","scale","link","source","target","Component"],"mappings":"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","sourcesContent":["import { Alert, Box, Grid, GridItem, Spinner } from '@chakra-ui/react';\nimport React from 'react';\nimport { scaleCategory20 } from 'd3-scale';\nimport {\n    InteractiveForceGraph,\n\tForceGraphNode,\n    ForceGraphLink,\n    // Hint as forceHint,\n} from 'react-vis-force';\nimport {Hin as visHint} from 'react-vis'\nimport {ENDPOINT} from '../config'\nconst socketIOClient = require('socket.io-client');\n// data structure definitions for NodeGraph component\ninterface links {\n\tsource: string;\n\ttarget: string;\n}\ninterface nodes {\n    id: string;\n    income: number;\n}\nexport interface nodeGraphDataStruct {\n\tnodes: nodes[];\n    links: links[];\n    \n}\ninterface nodeGraphDataProps {\n    value?: any\n    socialdataresponse: nodeGraphDataStruct\n    endpoint: string\n}\n\nclass SocialNodeGraph extends React.Component<{}, nodeGraphDataProps> {\n    constructor(props) {\n        super(props);\n\t\tthis.state = {\n\t\t\tvalue: null,\n\t\t\tsocialdataresponse: { nodes: [], links: [] },\n\t\t\tendpoint: ENDPOINT,\n\t\t};\n\t}\n\t_forgetValue = () => {\n\t\tthis.setState({\n\t\t\tvalue: null,\n\t\t});\n\t};\n\n\t_rememberValue = (value) => {\n\t\tthis.setState({ value });\n\t};\n\n\tscale = scaleCategory20();\n\tcomponentDidMount() {\n\t\tconst { endpoint } = this.state;\n\t\t//Very simply connect to the socket\n\t\tconst socket = socketIOClient(endpoint);\n\t\t//Listen for data on the \"outgoing data\" namespace and supply a callback for what to do when we get one. In this case, we set a state variable\n\t\tsocket.on('FromSocialNodeData', (data) =>\n\t\t\tthis.setState({ socialdataresponse: data })\n\t\t);\n\t}\n\trender() {\n\t\tconst { socialdataresponse, value } = this.state;\n        return (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\th=\"200px\"\n\t\t\t\t\t\t\ttemplateRows=\"repeat(2, 1fr)\"\n\t\t\t\t\t\t\ttemplateColumns=\"repeat(5, 1fr)\"\n\t\t\t\t\t\t\tgap={4}\n\t\t\t\t\t\t>\n                    <GridItem rowSpan={1} colSpan={4} bg=\"tomato\">\n                        <InteractiveForceGraph\n\t\t\t\t\t\t\t\tanimation=\"wobbly\"\n\t\t\t\t\t\t\t\tsimulationOptions={{\n\t\t\t\t\t\t\t\t\theight: 500,\n\t\t\t\t\t\t\t\t\twidth: 1000,\n\t\t\t\t\t\t\t\t\talpha: 1,\n\t\t\t\t\t\t\t\t\tanimate: true,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tlabelAttr=\"label\"\n\t\t\t\t\t\t\t\thighlightDependencies\n\t\t\t\t\t\t\t\tonSelectNode={(node) => {\n\t\t\t\t\t\t\t\t\tthis.setState({ value: 'HI' });\n\t\t\t\t\t\t\t\t\tthis.forceUpdate();\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonDeselectNode={this._forgetValue}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{socialdataresponse.nodes.length == 0 ? (\n\t\t\t\t\t\t\t\t\t<Spinner />\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\tsocialdataresponse.nodes.map((node) => (\n\t\t\t\t\t\t\t\t\t\t<ForceGraphNode\n\t\t\t\t\t\t\t\t\t\t\tkey={node.id}\n\t\t\t\t\t\t\t\t\t\t\tnode={{\n\t\t\t\t\t\t\t\t\t\t\t\tid: node.id,\n\t\t\t\t\t\t\t\t\t\t\t\tlabel: node.id,\n\t\t\t\t\t\t\t\t\t\t\t\tincome: node.income,\n\t\t\t\t\t\t\t\t\t\t\t\tradius: Math.ceil((node.income / 1000) % 10),\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tfill={this.scale(Math.ceil((node.income / 1000) % 10))}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t{socialdataresponse.nodes.length == 0 ? (\n\t\t\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\tsocialdataresponse.links.map((link) => (\n\t\t\t\t\t\t\t\t\t\t<ForceGraphLink\n\t\t\t\t\t\t\t\t\t\t\tkey={link.source + link.target}\n\t\t\t\t\t\t\t\t\t\t\tlink={{ source: link.source, target: link.target }}\n\t\t\t\t\t\t\t\t\t\t\tfill=\"blue\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</InteractiveForceGraph>\n                            </GridItem>\n                    <GridItem colSpan={1} bg=\"papayawhip\" >\n                        {value ? <Box value={value}>{value}</Box> : null}\n                            </GridItem>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t</>\n\t\t\t\t);\n\t}\n}\nexport default SocialNodeGraph;\n"]},"metadata":{},"sourceType":"module"}