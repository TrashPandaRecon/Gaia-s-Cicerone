{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/will/Desktop/dev/SDE/prototype/visualizer-frontend/src/pages/index.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Box, Spinner } from '@chakra-ui/react';\nimport React from 'react';\nimport { Hero } from '../components/Hero';\nimport { Container } from '../components/Container';\nimport { Main } from '../components/Main';\nimport { DarkModeSwitch } from '../components/DarkModeSwitch';\nimport { Footer } from '../components/Footer';\nimport BarChart from '../components/BarChart';\nimport SocialNodeGraph from '../components/SocialNodeGraph';\nimport { SOCIALNODEDATA } from '../data';\n\nvar socketIOClient = require('socket.io-client');\n\nvar ENDPOINT = 'http://localhost:3456';\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      salesresponse: [],\n      timeresponse: 0,\n      socialdataresponse: '',\n      endpoint: ENDPOINT\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var endpoint = this.state.endpoint; //Very simply connect to the socket\n\n      var socket = socketIOClient(endpoint); //Listen for data on the \"outgoing data\" namespace and supply a callback for what to do when we get one. In this case, we set a state variable\n\n      socket.on('FromAPI', function (data) {\n        return _this2.setState({\n          timeresponse: data\n        });\n      });\n      socket.on('FromSalesData', function (data) {\n        return _this2.setState({\n          salesresponse: data\n        });\n      });\n      socket.on('FromSocialNodeData', function (data) {\n        return _this2.setState({\n          socialdataresponse: data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          timeresponse = _this$state.timeresponse,\n          salesresponse = _this$state.salesresponse,\n          socialdataresponse = _this$state.socialdataresponse;\n      console.log(JSON.socialdataresponse);\n      return /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Hero, {\n          title: \"DEMO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Main, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            children: [\"The date is \", timeresponse]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            width: \"100%\",\n            children: !salesresponse ? /*#__PURE__*/_jsxDEV(BarChart, {\n              data: {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 8\n            }, this) : /*#__PURE__*/_jsxDEV(BarChart, {\n              data: salesresponse\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: !socialdataresponse ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 8\n            }, this) : /*#__PURE__*/_jsxDEV(SocialNodeGraph, {\n              nodeGraphData: SOCIALNODEDATA\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(DarkModeSwitch, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {\n          children: \"Fancy Footer Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 4\n      }, this);\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/will/Desktop/dev/SDE/prototype/visualizer-frontend/src/pages/index.tsx"],"names":["Box","Spinner","React","Hero","Container","Main","DarkModeSwitch","Footer","BarChart","SocialNodeGraph","SOCIALNODEDATA","socketIOClient","require","ENDPOINT","App","props","state","salesresponse","timeresponse","socialdataresponse","endpoint","socket","on","data","setState","console","log","JSON","Component"],"mappings":"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","sourcesContent":["import {\n\tBox, Spinner,\n} from '@chakra-ui/react';\nimport React, {  } from 'react';\nimport { Hero } from '../components/Hero';\nimport { Container } from '../components/Container';\nimport { Main } from '../components/Main';\nimport { DarkModeSwitch } from '../components/DarkModeSwitch';\nimport { Footer } from '../components/Footer';\nimport BarChart from '../components/BarChart';\nimport SocialNodeGraph from '../components/SocialNodeGraph';\nimport {SOCIALNODEDATA} from '../data';\nconst socketIOClient = require('socket.io-client');\nconst ENDPOINT = 'http://localhost:3456';\ninterface indexProps {\n    endpoint: string\n    salesresponse: any\n    timeresponse: number\n    socialdataresponse:string\n}\n\nclass App extends React.Component<{},indexProps> {\n\tconstructor(props) {\n        super(props);\n        this.state = {\n            salesresponse: [],\n            timeresponse: 0,\n            socialdataresponse: '',\n\t\t\tendpoint: ENDPOINT,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { endpoint } = this.state;\n\t\t//Very simply connect to the socket\n\t\tconst socket = socketIOClient(endpoint);\n\t\t//Listen for data on the \"outgoing data\" namespace and supply a callback for what to do when we get one. In this case, we set a state variable\n        socket.on('FromAPI', (data) => this.setState({timeresponse: data}));\n        socket.on('FromSalesData', (data) => this.setState({salesresponse: data}))\n        socket.on('FromSocialNodeData', (data) =>\n\t\t\t\t\tthis.setState({ socialdataresponse: data })\n\t\t\t\t);\n\t}\n\n\trender() {\n        const {timeresponse, salesresponse, socialdataresponse} = this.state;\n        console.log(JSON.socialdataresponse)\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<Hero title=\"DEMO\" />\n\t\t\t\t<Main>\n\t\t\t\t\t<Box>The date is {timeresponse}</Box>\n\t\t\t\t\t<Box width=\"100%\">\n\t\t\t\t\t\t{!salesresponse ? (\n\t\t\t\t\t\t\t<BarChart data={{}}></BarChart>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<BarChart data={salesresponse}></BarChart>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t{!socialdataresponse ? (\n\t\t\t\t\t\t\t<Spinner></Spinner>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<SocialNodeGraph nodeGraphData={SOCIALNODEDATA}></SocialNodeGraph>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Box>\n\t\t\t\t</Main>\n\t\t\t\t<DarkModeSwitch></DarkModeSwitch>\n\t\t\t\t<Footer>Fancy Footer Information</Footer>\n\t\t\t</Container>\n\t\t);\n\t}\n}\nexport default App"]},"metadata":{},"sourceType":"module"}