{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { theme as chakraTheme } from '@chakra-ui/react';\n\nconst fonts = _objectSpread(_objectSpread({}, chakraTheme.fonts), {}, {\n  mono: `'Menlo', monospace`\n});\n\nconst breakpoints = ['40em', '52em', '64em'];\nconst theme = {\n  styles: {\n    global: props => ({\n      \"html, body\": {\n        fontSize: \"sm\",\n        color: props.colorMode === \"dark\" ? \"white\" : \"gray.600\",\n        lineHeight: \"tall\"\n      },\n      a: {\n        color: props.colorMode === \"dark\" ? \"teal.300\" : \"teal.500\"\n      }\n    })\n  }\n};\nexport default theme;","map":{"version":3,"sources":["/code/src/theme.tsx"],"names":["theme","chakraTheme","fonts","mono","breakpoints","styles","global","props","fontSize","color","colorMode","lineHeight","a"],"mappings":";;;;;;AAAA,SAASA,KAAK,IAAIC,WAAlB,QAAqC,kBAArC;;AAEA,MAAMC,KAAK,mCAAQD,WAAW,CAACC,KAApB;AAA2BC,EAAAA,IAAI,EAAG;AAAlC,EAAX;;AAEA,MAAMC,WAAW,GAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,CAApB;AAEA,MAAMJ,KAAK,GAAG;AACZK,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAGC,KAAD,KAAY;AAClB,oBAAc;AACZC,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,KAAK,EAAEF,KAAK,CAACG,SAAN,KAAoB,MAApB,GAA6B,OAA7B,GAAuC,UAFlC;AAGZC,QAAAA,UAAU,EAAE;AAHA,OADI;AAMlBC,MAAAA,CAAC,EAAE;AACDH,QAAAA,KAAK,EAAEF,KAAK,CAACG,SAAN,KAAoB,MAApB,GAA6B,UAA7B,GAA0C;AADhD;AANe,KAAZ;AADF;AADI,CAAd;AAeA,eAAeV,KAAf","sourcesContent":["import { theme as chakraTheme } from '@chakra-ui/react'\n\nconst fonts = { ...chakraTheme.fonts, mono: `'Menlo', monospace` }\n\nconst breakpoints = ['40em', '52em', '64em']\n\nconst theme = {\n  styles: {\n    global: (props) => ({\n      \"html, body\": {\n        fontSize: \"sm\",\n        color: props.colorMode === \"dark\" ? \"white\" : \"gray.600\",\n        lineHeight: \"tall\",\n      },\n      a: {\n        color: props.colorMode === \"dark\" ? \"teal.300\" : \"teal.500\",\n      },\n    }),\n  },\n}\n\nexport default theme\n"]},"metadata":{},"sourceType":"module"}