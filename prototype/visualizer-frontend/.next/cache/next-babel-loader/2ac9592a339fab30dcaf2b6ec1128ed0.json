{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/will/Desktop/dev/SDE/prototype/visualizer-frontend/src/components/RatingChart.tsx\";\nimport React from 'react';\nimport 'react-vis/dist/style.css';\nimport { SingletonSocket } from '../SingletonSocket';\nimport { RadialChart as RChart, CircularGridLines } from 'react-vis';\nimport { Flex, Skeleton } from '@chakra-ui/react';\nimport theme from '../theme'; // This radial chart is specifically only for showing scores out of 5.\n\nclass RadialChart extends React.Component {\n  constructor(props) {\n    super(props);\n    var itemArray = [];\n\n    for (let i = 0; i < this.props.dataPipe.length; i++) {\n      itemArray.push({\n        title: this.props.dataPipe[i]\n      });\n    }\n\n    this.state = {\n      dataStorage: new Array(this.props.dataPipe.length),\n      dataPipe: this.props.dataPipe,\n      socketConnection: SingletonSocket.getInstance().getSocket(),\n      items: itemArray,\n      value: null\n    };\n  }\n\n  componentDidMount() {\n    const {\n      dataPipe,\n      socketConnection,\n      dataStorage\n    } = this.state;\n\n    for (let i = 0; i < dataPipe.length; i++) {\n      socketConnection.on(dataPipe[i], data => {\n        var scaledRadius = 1 / 6 * 5 / 5 * data.radius;\n        dataStorage.splice(i, 1, {\n          angle: 1,\n          radius: scaledRadius,\n          label: data.label\n        });\n        this.setState({\n          dataStorage: dataStorage\n        });\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    const {\n      dataPipe,\n      socketConnection\n    } = this.state;\n\n    for (let i = 0; i < dataPipe.length; i++) {\n      socketConnection.off(dataPipe[i], data => {});\n    }\n  }\n\n  render() {\n    const {\n      dataStorage,\n      value,\n      items\n    } = this.state;\n    const myData = [{\n      angle: 1,\n      radius: 0.16666666666,\n      label: 'A'\n    }, {\n      angle: 1,\n      radius: 0.2,\n      label: 'B'\n    }, {\n      angle: 1,\n      radius: 0.8,\n      label: 'C'\n    }, {\n      angle: 1,\n      radius: 1,\n      label: 'D'\n    }];\n    console.log(myData);\n    console.log(dataStorage);\n    return /*#__PURE__*/_jsxDEV(Flex, {\n      p: \"1\",\n      children: dataStorage.every(v => !v) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(RChart, {\n          width: this.props.width,\n          height: this.props.height,\n          data: dataStorage,\n          animation: true,\n          labelsRadiusMultiplier: 1.3,\n          labelsStyle: {\n            fontSize: theme.fontSizes.sm,\n            fill: '#222'\n          },\n          showLabels: true,\n          radius: this.props.width / 2,\n          children: /*#__PURE__*/_jsxDEV(CircularGridLines, {\n            tickTotal: 6,\n            tickValues: [...new Array(6)].map((v, i) => i / 6 - 1),\n            style: {\n              stroke: '#666262',\n              strokeOpacity: 0.4\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(Skeleton, {\n        height: this.props.height.toString() + 'px',\n        width: this.props.width.toString() + 'px'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default RadialChart;","map":{"version":3,"sources":["/Users/will/Desktop/dev/SDE/prototype/visualizer-frontend/src/components/RatingChart.tsx"],"names":["React","SingletonSocket","RadialChart","RChart","CircularGridLines","Flex","Skeleton","theme","Component","constructor","props","itemArray","i","dataPipe","length","push","title","state","dataStorage","Array","socketConnection","getInstance","getSocket","items","value","componentDidMount","on","data","scaledRadius","radius","splice","angle","label","setState","componentWillUnmount","off","render","myData","console","log","every","v","width","height","fontSize","fontSizes","sm","fill","map","stroke","strokeOpacity","toString"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'react-vis/dist/style.css';\nimport { SingletonSocket } from '../SingletonSocket';\nimport {\n    RadialChart as RChart,\n    CircularGridLines\n} from 'react-vis';\nimport * as d3 from 'd3';\nimport { Box, Flex, Grid, GridItem, Skeleton } from '@chakra-ui/react';\nimport theme from '../theme';\n\n// This radial chart is specifically only for showing scores out of 5.\ninterface ResponseStruct {\n\tangle: number\n    radius: number\n    label: string\n    subLabel?:string\n}\n\ninterface DataProps {\n\tdataStorage: ResponseStruct[];\n\tdataPipe: string[];\n\tsocketConnection: any;\n\tvalue?: any;\n\titems?: any;\n}\n\nclass RadialChart extends React.Component<\n\t{ dataPipe: string[]; height: number; width: number },\n\tDataProps\n> {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tvar itemArray = [];\n\t\tfor (let i = 0; i < this.props.dataPipe.length; i++) {\n\t\t\titemArray.push({ title: this.props.dataPipe[i] });\n\t\t}\n\t\tthis.state = {\n\t\t\tdataStorage:new Array(this.props.dataPipe.length),\n\t\t\tdataPipe: this.props.dataPipe,\n\t\t\tsocketConnection: SingletonSocket.getInstance().getSocket(),\n\t\t\titems: itemArray,\n\t\t\tvalue: null,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n        const {dataPipe, socketConnection, dataStorage} = this.state;\n\t\tfor (let i = 0; i < dataPipe.length; i++) {\n            socketConnection.on(dataPipe[i], (data) => {\n                var scaledRadius = ((1/6*5) / 5) * data.radius\n                dataStorage.splice(i,1,{ angle:1, radius: scaledRadius,label:data.label })\n\t\t\t\tthis.setState({ dataStorage: dataStorage });\n\t\t\t});\n\t\t}\n\t}\n\tcomponentWillUnmount() {\n\t\tconst { dataPipe, socketConnection } = this.state;\n\t\tfor (let i = 0; i < dataPipe.length; i++) {\n\t\t\tsocketConnection.off(dataPipe[i], (data) => {});\n\t\t}\n\t}\n\n\trender() {\n        const {dataStorage, value, items} = this.state;\n        const myData = [\n\t\t\t\t\t{ angle: 1, radius: 0.16666666666, label: 'A' },\n\t\t\t\t\t{ angle: 1, radius: 0.2, label: 'B' },\n\t\t\t\t\t{ angle: 1, radius: 0.8, label: 'C' },\n\t\t\t\t\t{ angle: 1, radius: 1, label: 'D' },\n        ];\n        console.log(myData)\n        console.log(dataStorage)\n\t\treturn (\n\t\t\t<Flex p=\"1\">\n\t\t\t\t{dataStorage.every((v) => !v) ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<RChart\n\t\t\t\t\t\t\twidth={this.props.width}\n\t\t\t\t\t\t\theight={this.props.height}\n                                data={dataStorage}\n\t\t\t\t\t\t\tanimation={true}\n\t\t\t\t\t\t\tlabelsRadiusMultiplier={1.3}\n\t\t\t\t\t\t\tlabelsStyle={{ fontSize: theme.fontSizes.sm, fill: '#222' }}\n\t\t\t\t\t\t\tshowLabels={true}\n\t\t\t\t\t\t\tradius={this.props.width / 2}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<CircularGridLines\n\t\t\t\t\t\t\t\ttickTotal={6}\n\t\t\t\t\t\t\t\ttickValues={[...new Array(6)].map((v, i) => i / 6 - 1)}\n\t\t\t\t\t\t\t\tstyle={{ stroke: '#666262', strokeOpacity: 0.4 }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</RChart>\n\t\t\t\t\t</>\n                ) : (\n                        <Skeleton\n\t\t\t\t\t\theight={this.props.height.toString() + 'px'}\n\t\t\t\t\t\twidth={this.props.width.toString() + 'px'}\n\t\t\t\t\t></Skeleton>\n\t\t\t\t\t\n\t\t\t\t)}\n\t\t\t</Flex>\n\t\t);\n\t}\n}\n\nexport default RadialChart;\n"]},"metadata":{},"sourceType":"module"}