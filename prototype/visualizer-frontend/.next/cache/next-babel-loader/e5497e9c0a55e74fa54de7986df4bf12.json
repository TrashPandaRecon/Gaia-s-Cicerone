{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/will/Desktop/dev/SDE/prototype/visualizer-frontend/src/pages/index.tsx\";\nimport { Box } from '@chakra-ui/react';\nimport React from 'react';\nimport { Hero } from '../components/Hero';\nimport { Container } from '../components/Container';\nimport { Main } from '../components/Main';\nimport { DarkModeSwitch } from '../components/DarkModeSwitch';\nimport { Footer } from '../components/Footer';\nimport BarChart from '../components/BarChart';\nimport SocialNodeGraph from '../components/SocialNodeGraph';\nimport { ENDPOINT } from '../config';\n\nconst socketIOClient = require('socket.io-client');\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      salesresponse: [],\n      timeresponse: 0,\n      endpoint: ENDPOINT\n    };\n  }\n\n  componentDidMount() {\n    const {\n      endpoint\n    } = this.state; //Very simply connect to the socket\n\n    const socket = socketIOClient(endpoint); //Listen for data on the \"outgoing data\" namespace and supply a callback for what to do when we get one. In this case, we set a state variable\n\n    socket.on('FromAPI', data => this.setState({\n      timeresponse: data\n    }));\n    socket.on('FromSalesData', data => this.setState({\n      salesresponse: data\n    }));\n  }\n\n  render() {\n    const {\n      timeresponse,\n      salesresponse\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Hero, {\n        title: \"DEMO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: [\"The date is \", timeresponse]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          width: \"100%\",\n          children: !salesresponse ? /*#__PURE__*/_jsxDEV(BarChart, {\n            data: {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 8\n          }, this) : /*#__PURE__*/_jsxDEV(BarChart, {\n            data: salesresponse\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(SocialNodeGraph, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DarkModeSwitch, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        children: \"Fancy Footer Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/will/Desktop/dev/SDE/prototype/visualizer-frontend/src/pages/index.tsx"],"names":["Box","React","Hero","Container","Main","DarkModeSwitch","Footer","BarChart","SocialNodeGraph","ENDPOINT","socketIOClient","require","App","Component","constructor","props","state","salesresponse","timeresponse","endpoint","componentDidMount","socket","on","data","setState","render"],"mappings":";;AAAA,SACCA,GADD,QAEO,kBAFP;AAGA,OAAOC,KAAP,MAAwB,OAAxB;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,cAAT,QAA+B,8BAA/B;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,eAAP,MAAmD,+BAAnD;AAEA,SAAQC,QAAR,QAAuB,WAAvB;;AACA,MAAMC,cAAc,GAAGC,OAAO,CAAC,kBAAD,CAA9B;;AASA,MAAMC,GAAN,SAAkBX,KAAK,CAACY,SAAxB,CAAiD;AAChDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACZ,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,aAAa,EAAE,EADN;AAETC,MAAAA,YAAY,EAAE,CAFL;AAGlBC,MAAAA,QAAQ,EAAEV;AAHQ,KAAb;AAKN;;AAEDW,EAAAA,iBAAiB,GAAG;AACnB,UAAM;AAAED,MAAAA;AAAF,QAAe,KAAKH,KAA1B,CADmB,CAEnB;;AACA,UAAMK,MAAM,GAAGX,cAAc,CAACS,QAAD,CAA7B,CAHmB,CAInB;;AACME,IAAAA,MAAM,CAACC,EAAP,CAAU,SAAV,EAAsBC,IAAD,IAAU,KAAKC,QAAL,CAAc;AAACN,MAAAA,YAAY,EAAEK;AAAf,KAAd,CAA/B;AACAF,IAAAA,MAAM,CAACC,EAAP,CAAU,eAAV,EAA4BC,IAAD,IAAU,KAAKC,QAAL,CAAc;AAACP,MAAAA,aAAa,EAAEM;AAAhB,KAAd,CAArC;AAEN;;AAEDE,EAAAA,MAAM,GAAG;AACF,UAAM;AAACP,MAAAA,YAAD;AAAeD,MAAAA;AAAf,QAAgC,KAAKD,KAA3C;AACN,wBACC,QAAC,SAAD;AAAA,8BACC,QAAC,IAAD;AAAM,QAAA,KAAK,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cADD,eAEC,QAAC,IAAD;AAAA,gCACC,QAAC,GAAD;AAAA,qCAAkBE,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,QAAC,GAAD;AAAK,UAAA,KAAK,EAAC,MAAX;AAAA,oBACE,CAACD,aAAD,gBACA,QAAC,QAAD;AAAU,YAAA,IAAI,EAAE;AAAhB;AAAA;AAAA;AAAA;AAAA,kBADA,gBAGA,QAAC,QAAD;AAAU,YAAA,IAAI,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,gBAFD,eASC,QAAC,GAAD;AAAA,iCACmB,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AADnB;AAAA;AAAA;AAAA;AAAA,gBATD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD,eAeC,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cAfD,eAgBC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAoBA;;AA1C+C;;AA4CjD,eAAeL,GAAf","sourcesContent":["import {\n\tBox, Spinner,\n} from '@chakra-ui/react';\nimport React, {  } from 'react';\nimport { Hero } from '../components/Hero';\nimport { Container } from '../components/Container';\nimport { Main } from '../components/Main';\nimport { DarkModeSwitch } from '../components/DarkModeSwitch';\nimport { Footer } from '../components/Footer';\nimport BarChart from '../components/BarChart';\nimport SocialNodeGraph, {nodeGraphDataStruct} from '../components/SocialNodeGraph';\nimport {SOCIALNODEDATA, SOCIALNODEDATA1} from '../data';\nimport {ENDPOINT} from '../config';\nconst socketIOClient = require('socket.io-client');\n\n\ninterface indexProps {\n    endpoint: string\n    salesresponse: any\n    timeresponse: number\n}\n\nclass App extends React.Component<{},indexProps> {\n\tconstructor(props) {\n        super(props);\n        this.state = {\n            salesresponse: [],\n            timeresponse: 0,\n\t\t\tendpoint: ENDPOINT,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { endpoint } = this.state;\n\t\t//Very simply connect to the socket\n\t\tconst socket = socketIOClient(endpoint);\n\t\t//Listen for data on the \"outgoing data\" namespace and supply a callback for what to do when we get one. In this case, we set a state variable\n        socket.on('FromAPI', (data) => this.setState({timeresponse: data}));\n        socket.on('FromSalesData', (data) => this.setState({salesresponse: data}))\n     \n\t}\n\n\trender() {\n        const {timeresponse, salesresponse} = this.state;\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<Hero title=\"DEMO\" />\n\t\t\t\t<Main>\n\t\t\t\t\t<Box>The date is {timeresponse}</Box>\n\t\t\t\t\t<Box width=\"100%\">\n\t\t\t\t\t\t{!salesresponse ? (\n\t\t\t\t\t\t\t<BarChart data={{}}></BarChart>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<BarChart data={salesresponse}></BarChart>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Box>\n                        <SocialNodeGraph ></SocialNodeGraph>\n\t\t\t\t\t</Box>\n\t\t\t\t</Main>\n\t\t\t\t<DarkModeSwitch></DarkModeSwitch>\n\t\t\t\t<Footer>Fancy Footer Information</Footer>\n\t\t\t</Container>\n\t\t);\n\t}\n}\nexport default App"]},"metadata":{},"sourceType":"module"}