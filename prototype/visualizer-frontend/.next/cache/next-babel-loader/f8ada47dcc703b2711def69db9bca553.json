{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/will/Desktop/dev/SDE/prototype/visualizer-frontend/src/components/BarChart.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport * as d3 from 'd3';\nimport { useD3 } from './hooks/useD3';\nimport { GradientDefs, DiscreteColorLegend } from 'react-vis';\nimport { ENDPOINT } from '../config';\n\nvar socketIOClient = require('socket.io-client');\n\nvar BarChart = /*#__PURE__*/function (_React$Component) {\n  _inherits(BarChart, _React$Component);\n\n  var _super = _createSuper(BarChart);\n\n  function BarChart(props) {\n    var _this;\n\n    _classCallCheck(this, BarChart);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      graphdata: [],\n      dataPipe: _this.props.dataPipe,\n      endpoint: ENDPOINT,\n      yAxisName: _this.props.yAxisName\n    };\n    return _this;\n  }\n\n  _createClass(BarChart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          endpoint = _this$state.endpoint,\n          dataPipe = _this$state.dataPipe;\n      var socket = socketIOClient(endpoint);\n      socket.on(dataPipe, function (data) {\n        return _this2.setState({\n          graphdata: data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          graphdata = _this$state2.graphdata,\n          yAxisName = _this$state2.yAxisName;\n      var ref = useD3(function (svg) {\n        var height = 500;\n        var width = 1000;\n        var margin = {\n          top: 20,\n          right: 30,\n          bottom: 30,\n          left: 40\n        };\n        var x = d3.scaleBand().domain(graphdata.map(function (d) {\n          return d.x;\n        })).rangeRound([margin.left, width - margin.right]).padding(0.1);\n        var y1 = d3.scaleLinear().domain([0, d3.max(graphdata, function (d) {\n          return d.y;\n        })]).rangeRound([height - margin.bottom, margin.top]);\n\n        var xAxis = function xAxis(g) {\n          return g.attr('transform', \"translate(0,\".concat(height - margin.bottom, \")\")).call(d3.axisBottom(x).tickValues(d3.ticks.apply(d3, _toConsumableArray(d3.extent(x.domain())).concat([width / 40])).filter(function (v) {\n            return x(v) !== undefined;\n          })).tickSizeOuter(0));\n        };\n\n        var y1Axis = function y1Axis(g) {\n          return g.attr('transform', \"translate(\".concat(margin.left, \",0)\")).style('color', 'steelblue').call(d3.axisLeft(y1).ticks(null, 's')).call(function (g) {\n            return g.select('.domain').remove();\n          }).call(function (g) {\n            return g.append('text').attr('x', -margin.left).attr('y', 10).attr('fill', 'currentColor').attr('text-anchor', 'start').text(y1);\n          });\n        };\n\n        svg.select('.x-axis').call(xAxis);\n        svg.select('.y-axis').call(y1Axis);\n        svg.select('.plot-area').attr('fill', 'steelblue').selectAll('.bar').graphdata(graphdata).join('rect').attr('class', 'bar').attr('x', function (d) {\n          return x(d.x);\n        }).attr('width', x.bandwidth()).attr('y', function (d) {\n          return y1(d.y);\n        }).attr('height', function (d) {\n          return y1(0) - y1(d.y);\n        });\n      }, [graphdata.length]);\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          ref: ref,\n          style: {\n            height: 500,\n            width: '100%',\n            marginRight: '0px',\n            marginLeft: '0px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"g\", {\n            className: \"plot-area\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n            className: \"x-axis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n            className: \"y-axis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n          height: 0,\n          width: 0,\n          children: /*#__PURE__*/_jsxDEV(GradientDefs, {\n            children: [/*#__PURE__*/_jsxDEV(\"pattern\", {\n              id: \"stripes\",\n              width: \"4\",\n              height: \"4\",\n              patternUnits: \"userSpaceOnUse\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M 0, 0 l 5, 5\",\n                stroke: \"steelblue\",\n                strokeLinecap: \"square\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"pattern\", {\n              id: \"circles\",\n              width: \"3\",\n              height: \"3\",\n              patternUnits: \"userSpaceOnUse\",\n              children: /*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: \"1.5\",\n                cy: \"1.5\",\n                r: \"0.8\",\n                fill: \"magenta\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(DiscreteColorLegend, {\n          orientation: \"horizontal\",\n          width: 400,\n          items: [{\n            title: {\n              yAxisName: yAxisName\n            },\n            color: 'steelblue',\n            strokeWidth: 400\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    }\n  }]);\n\n  return BarChart;\n}(React.Component);\n\nexport default BarChart;","map":{"version":3,"sources":["/Users/will/Desktop/dev/SDE/prototype/visualizer-frontend/src/components/BarChart.tsx"],"names":["React","d3","useD3","GradientDefs","DiscreteColorLegend","ENDPOINT","socketIOClient","require","BarChart","props","state","graphdata","dataPipe","endpoint","yAxisName","socket","on","data","setState","ref","svg","height","width","margin","top","right","bottom","left","x","scaleBand","domain","map","d","rangeRound","padding","y1","scaleLinear","max","y","xAxis","g","attr","call","axisBottom","tickValues","ticks","extent","filter","v","undefined","tickSizeOuter","y1Axis","style","axisLeft","select","remove","append","text","selectAll","join","bandwidth","length","marginRight","marginLeft","title","color","strokeWidth","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as d3 from 'd3';\nimport {useD3} from './hooks/useD3';\nimport {GradientDefs, DiscreteColorLegend} from 'react-vis';\nimport {ENDPOINT} from '../config';\nconst socketIOClient = require('socket.io-client');\ninterface XYResponseStruct {\n\tx: string;\n\ty: number;\n}\ninterface XYDataProps {\n\tgraphdata: XYResponseStruct[]\n    endpoint: string;\n    dataPipe: string;\n    yAxisName: string;\n}\n\n\nclass BarChart extends React.Component<{dataPipe:string,yAxisName:string},XYDataProps>{\n    constructor(props) {\n        super(props);\n        this.state = {\n            graphdata: [],\n            dataPipe: this.props.dataPipe,\n            endpoint: ENDPOINT,\n            yAxisName: this.props.yAxisName\n        }\n    }\n    componentDidMount() {\n        const {endpoint,dataPipe} = this.state;\n        const socket = socketIOClient(endpoint)\n        socket.on(dataPipe, (data) => \n            this.setState({graphdata: data})\n        )\n    }\n    render() {\n        const {graphdata, yAxisName} = this.state\n        const ref = useD3(\n            (svg) => {\n                const height = 500;\n                const width = 1000;\n                const margin = {top: 20, right: 30, bottom: 30, left: 40};\n\n                const x = d3\n                    .scaleBand()\n                    .domain(graphdata.map((d) => d.x))\n                    .rangeRound([margin.left, width - margin.right])\n                    .padding(0.1);\n\n                const y1 = d3\n                    .scaleLinear()\n                    .domain([0, d3.max(graphdata, (d) => d.y)])\n                    .rangeRound([height - margin.bottom, margin.top]);\n\n                const xAxis = (g) =>\n                    g.attr('transform', `translate(0,${height - margin.bottom})`).call(\n                        d3\n                            .axisBottom(x)\n                            .tickValues(\n                                d3\n                                    .ticks(...d3.extent(x.domain()), width / 40)\n                                    .filter((v) => x(v) !== undefined)\n                            )\n                            .tickSizeOuter(0)\n                    );\n\n                const y1Axis = (g) =>\n                    g\n                        .attr('transform', `translate(${margin.left},0)`)\n                        .style('color', 'steelblue')\n                        .call(d3.axisLeft(y1).ticks(null, 's'))\n                        .call((g) => g.select('.domain').remove())\n                        .call((g) =>\n                            g\n                                .append('text')\n                                .attr('x', -margin.left)\n                                .attr('y', 10)\n                                .attr('fill', 'currentColor')\n                                .attr('text-anchor', 'start')\n                                .text(y1)\n                        );\n\n                svg.select('.x-axis').call(xAxis);\n                svg.select('.y-axis').call(y1Axis);\n\n                svg\n                    .select('.plot-area')\n                    .attr('fill', 'steelblue')\n                    .selectAll('.bar')\n                    .graphdata(graphdata)\n                    .join('rect')\n                    .attr('class', 'bar')\n                    .attr('x', (d) => x(d.x))\n                    .attr('width', x.bandwidth())\n                    .attr('y', (d) => y1(d.y))\n                    .attr('height', (d) => y1(0) - y1(d.y));\n            \n                \n            },\n            [graphdata.length]\n        );\n\n        return (\n            <>\n                <svg\n                    ref={ref}\n                    style={{\n                        height: 500,\n                        width: '100%',\n                        marginRight: '0px',\n                        marginLeft: '0px',\n                    }}\n                >\n                    <g className=\"plot-area\" />\n                    <g className=\"x-axis\" />\n                    <g className=\"y-axis\" />\n                </svg>\n                <svg height={0} width={0}>\n                    <GradientDefs>\n                        <pattern\n                            id=\"stripes\"\n                            width=\"4\"\n                            height=\"4\"\n                            patternUnits=\"userSpaceOnUse\"\n                        >\n                            <path d=\"M 0, 0 l 5, 5\" stroke=\"steelblue\" strokeLinecap=\"square\" />\n                        </pattern>\n                        <pattern\n                            id=\"circles\"\n                            width=\"3\"\n                            height=\"3\"\n                            patternUnits=\"userSpaceOnUse\"\n                        >\n                            <circle cx=\"1.5\" cy=\"1.5\" r=\"0.8\" fill=\"magenta\" />\n                        </pattern>\n                    </GradientDefs>\n                </svg>\n                <DiscreteColorLegend\n                    orientation=\"horizontal\"\n                    width={400}\n                    items={[{title: {yAxisName}, color: 'steelblue', strokeWidth: 400}]}\n                />\n            </>\n        )\n    }\n}\n\nexport default BarChart;\n"]},"metadata":{},"sourceType":"module"}