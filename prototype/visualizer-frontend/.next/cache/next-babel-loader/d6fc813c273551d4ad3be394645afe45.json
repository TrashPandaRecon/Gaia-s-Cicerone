{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/will/Desktop/dev/SDE/prototype/visualizer-frontend/src/components/SocialNodeGraph.tsx\";\nimport { Spinner } from '@chakra-ui/react';\nimport React from 'react';\nimport { InteractiveForceGraph, ForceGraphNode, ForceGraphLink } from 'react-vis-force'; // data structure definitions for NodeGraph component\n\nfunction SocialNodeGraph({\n  nodeGraphData\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(InteractiveForceGraph, {\n      simulationOptions: {\n        height: 300,\n        width: 300\n      },\n      labelAttr: \"label\",\n      onSelectNode: node => console.log(node),\n      highlightDependencies: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this), nodeGraphData.nodes.length == 0 ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 8\n    }, this) : (nodeGraphData.nodes.map(node => /*#__PURE__*/_jsxDEV(ForceGraphNode, {\n      node: {\n        id: node.id,\n        label: node.id\n      },\n      fill: \"blue\"\n    }, node.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)), nodeGraphData.links.map(link => /*#__PURE__*/_jsxDEV(ForceGraphLink, {\n      link: {\n        source: link.source,\n        target: link.target\n      }\n    }, link.source + link.target, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 34\n    }, this)))]\n  }, void 0, true);\n}\n\nexport default SocialNodeGraph;","map":{"version":3,"sources":["/Users/will/Desktop/dev/SDE/prototype/visualizer-frontend/src/components/SocialNodeGraph.tsx"],"names":["Spinner","React","InteractiveForceGraph","ForceGraphNode","ForceGraphLink","SocialNodeGraph","nodeGraphData","height","width","node","console","log","nodes","length","map","id","label","links","link","source","target"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,kBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACCC,qBADD,EAECC,cAFD,EAGCC,cAHD,QAIO,iBAJP,C,CAKA;;AAaA,SAASC,eAAT,CAAyB;AACxBC,EAAAA;AADwB,CAAzB,EAIO;AAEC,sBACI;AAAA,4BACI,QAAC,qBAAD;AACd,MAAA,iBAAiB,EAAE;AAAEC,QAAAA,MAAM,EAAE,GAAV;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OADL;AAEd,MAAA,SAAS,EAAC,OAFI;AAGd,MAAA,YAAY,EAAGC,IAAD,IAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAHV;AAId,MAAA,qBAAqB;AAJP;AAAA;AAAA;AAAA;AAAA,YADJ,EAOLH,aAAa,CAACM,KAAd,CAAoBC,MAApB,IAA8B,CAA9B,gBACA,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADA,IAGAP,aAAa,CAACM,KAAd,CAAoBE,GAApB,CAAyBL,IAAD,iBACvB,QAAC,cAAD;AAA8B,MAAA,IAAI,EAAE;AAAEM,QAAAA,EAAE,EAAEN,IAAI,CAACM,EAAX;AAAeC,QAAAA,KAAK,EAAEP,IAAI,CAACM;AAA3B,OAApC;AAAqE,MAAA,IAAI,EAAC;AAA1E,OAAqBN,IAAI,CAACM,EAA1B;AAAA;AAAA;AAAA;AAAA,YADD,GAGiBT,aAAa,CAACW,KAAd,CAAoBH,GAApB,CAAyBI,IAAD,iBACf,QAAC,cAAD;AAA8C,MAAA,IAAI,EAAE;AAAEC,QAAAA,MAAM,EAAED,IAAI,CAACC,MAAf;AAAuBC,QAAAA,MAAM,EAAEF,IAAI,CAACE;AAApC;AAApD,OAAqBF,IAAI,CAACC,MAAL,GAAYD,IAAI,CAACE,MAAtC;AAAA;AAAA;AAAA;AAAA,YADT,CANjB,CAPK;AAAA,kBADJ;AAqBP;;AACD,eAAef,eAAf","sourcesContent":["import { Spinner } from '@chakra-ui/react';\nimport React from 'react';\nimport {\n\tInteractiveForceGraph,\n\tForceGraphNode,\n\tForceGraphLink,\n} from 'react-vis-force';\n// data structure definitions for NodeGraph component\ninterface links {\n\tsource: string;\n\ttarget: string;\n}\ninterface nodes {\n\tid: string;\n}\ninterface nodeGraphDataStruct {\n\tnodes: nodes[];\n\tlinks: links[];\n}\n\nfunction SocialNodeGraph({\n\tnodeGraphData,\n}: {\n\tnodeGraphData: nodeGraphDataStruct;\n    }) {\n\t\n        return (\n            <>\n                <InteractiveForceGraph\n  simulationOptions={{ height: 300, width: 300 }}\n  labelAttr=\"label\"\n  onSelectNode={(node) => console.log(node)}\n  highlightDependencies\n></InteractiveForceGraph>\n\t\t\t\t\t\t{nodeGraphData.nodes.length == 0 ? (\n\t\t\t\t\t\t\t<Spinner />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\tnodeGraphData.nodes.map((node) => (\n\t\t\t\t\t\t\t\t<ForceGraphNode key={node.id} node={{ id: node.id, label: node.id }} fill=\"blue\" />\n                            )),\n                        nodeGraphData.links.map((link) => (\n                                 <ForceGraphLink key={link.source+link.target} link={{ source: link.source, target: link.target }} />\n                            ))\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t);\n    \n}\nexport default SocialNodeGraph;\n"]},"metadata":{},"sourceType":"module"}