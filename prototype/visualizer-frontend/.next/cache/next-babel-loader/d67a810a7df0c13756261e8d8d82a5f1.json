{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/code/src/pages/_app.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { CSSReset } from '@chakra-ui/core';\nimport { ChakraProvider, ColorModeProvider } from '@chakra-ui/react';\nimport React from 'react';\nimport theme from '../theme';\n\nfunction MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(ColorModeProvider, {\n      children: [/*#__PURE__*/_jsxDEV(CSSReset, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/code/src/pages/_app.tsx"],"names":["CSSReset","ChakraProvider","ColorModeProvider","React","theme","MyApp","Component","pageProps"],"mappings":";;;;;;;;AAAA,SAAQA,QAAR,QAAuB,iBAAvB;AACA,SAASC,cAAT,EAAyBC,iBAAzB,QAAiD,kBAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,SAASC,KAAT,OAA4C;AAAA,MAA5BC,SAA4B,QAA5BA,SAA4B;AAAA,MAAjBC,SAAiB,QAAjBA,SAAiB;AACxC,sBACI,QAAC,cAAD;AAAgB,IAAA,KAAK,EAAEH,KAAvB;AAAA,2BACI,QAAC,iBAAD;AAAA,8BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD,oBAAeG,SAAf;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;KATQF,K;AAWT,eAAeA,KAAf","sourcesContent":["import {CSSReset} from '@chakra-ui/core';\nimport { ChakraProvider, ColorModeProvider} from '@chakra-ui/react';\nimport React from 'react';\nimport theme from '../theme';\n\nfunction MyApp({Component, pageProps}: any) {\n    return (\n        <ChakraProvider theme={theme}>\n            <ColorModeProvider>\n                <CSSReset></CSSReset>\n                <Component {...pageProps} />\n            </ColorModeProvider>\n\t\t</ChakraProvider>\n\t);\n}\n\nexport default MyApp;"]},"metadata":{},"sourceType":"module"}