{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Spinner } from '@chakra-ui/react';\nimport React from 'react';\nimport { scaleCategory20 } from 'd3-scale';\nimport { InteractiveForceGraph, ForceGraphNode, ForceGraphLink } from 'react-vis-force'; // import {Hint} from 'react-vis'\n\nimport { ENDPOINT } from '../config';\n\nvar socketIOClient = require('socket.io-client'); // data structure definitions for NodeGraph component\n\n\nvar SocialNodeGraph = /*#__PURE__*/function (_React$Component) {\n  _inherits(SocialNodeGraph, _React$Component);\n\n  var _super = _createSuper(SocialNodeGraph);\n\n  function SocialNodeGraph(props) {\n    var _this;\n\n    _classCallCheck(this, SocialNodeGraph);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"_forgetValue\", function () {\n      _this.setState({\n        value: null\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_rememberValue\", function (value) {\n      _this.setState({\n        value: value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"scale\", scaleCategory20());\n\n    _this.state = {\n      value: null,\n      socialdataresponse: {\n        nodes: [],\n        links: []\n      },\n      endpoint: ENDPOINT\n    };\n    return _this;\n  }\n\n  _createClass(SocialNodeGraph, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var endpoint = this.state.endpoint; //Very simply connect to the socket\n\n      var socket = socketIOClient(endpoint); //Listen for data on the \"outgoing data\" namespace and supply a callback for what to do when we get one. In this case, we set a state variable\n\n      socket.on('FromSocialNodeData', function (data) {\n        return _this2.setState({\n          socialdataresponse: data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          socialdataresponse = _this$state.socialdataresponse,\n          value = _this$state.value;\n      return /*#__PURE__*/_jsxs(InteractiveForceGraph, {\n        animation: \"wobbly\",\n        simulationOptions: {\n          height: 500,\n          width: 1000,\n          alpha: 1,\n          animate: true\n        },\n        labelAttr: \"label\",\n        highlightDependencies: true,\n        onSelectNode: function onSelectNode(node) {\n          return _this3._rememberValue(node.income);\n        },\n        onDeselectNode: this._forgetValue,\n        children: [socialdataresponse.nodes.length == 0 ? /*#__PURE__*/_jsx(Spinner, {}) : socialdataresponse.nodes.map(function (node) {\n          return /*#__PURE__*/_jsx(ForceGraphNode, {\n            node: {\n              id: node.id,\n              label: node.id,\n              income: node.income,\n              radius: Math.ceil(node.income / 1000 % 10)\n            },\n            fill: _this3.scale(Math.ceil(node.income / 1000 % 10))\n          }, node.id);\n        }), socialdataresponse.nodes.length == 0 ? /*#__PURE__*/_jsx(_Fragment, {}) : socialdataresponse.links.map(function (link) {\n          return /*#__PURE__*/_jsx(ForceGraphLink, {\n            link: {\n              source: link.source,\n              target: link.target\n            },\n            fill: \"blue\"\n          }, link.source + link.target);\n        })]\n      });\n    }\n  }]);\n\n  return SocialNodeGraph;\n}(React.Component);\n\nexport default SocialNodeGraph;","map":null,"metadata":{},"sourceType":"module"}