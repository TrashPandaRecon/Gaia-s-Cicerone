{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/will/Desktop/dev/SDE/prototype/visualizer-frontend/src/components/SocialNodeGraph.tsx\";\nimport { Spinner } from '@chakra-ui/react';\nimport React from 'react';\nimport { scaleCategory20 } from 'd3-scale';\nimport { InteractiveForceGraph, ForceGraphNode, ForceGraphLink } from 'react-vis-force'; // data structure definitions for NodeGraph component\n\nfunction SocialNodeGraph(_ref) {\n  var _this = this;\n\n  var nodeGraphData = _ref.nodeGraphData;\n  var scale = scaleCategory20();\n  return /*#__PURE__*/_jsxDEV(InteractiveForceGraph, {\n    animation: \"wobbly\",\n    simulationOptions: {\n      height: 500,\n      width: 1000,\n      alpha: 1,\n      animate: true\n    },\n    labelAttr: \"income\",\n    onSelectNode: function onSelectNode(node) {\n      return console.log(node);\n    },\n    highlightDependencies: true,\n    children: [nodeGraphData.nodes.length == 0 ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this) : nodeGraphData.nodes.map(function (node) {\n      return /*#__PURE__*/_jsxDEV(ForceGraphNode, {\n        node: {\n          id: node.id,\n          label: node.id,\n          income: node.income\n        },\n        fill: scale(node.income / 1000 % 10)\n      }, node.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 6\n      }, _this);\n    }), nodeGraphData.nodes.length == 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : nodeGraphData.links.map(function (link) {\n      return /*#__PURE__*/_jsxDEV(ForceGraphLink, {\n        link: {\n          source: link.source,\n          target: link.target\n        },\n        fill: \"blue\"\n      }, link.source + link.target, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 6\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_c = SocialNodeGraph;\nexport default SocialNodeGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"SocialNodeGraph\");","map":{"version":3,"sources":["/Users/will/Desktop/dev/SDE/prototype/visualizer-frontend/src/components/SocialNodeGraph.tsx"],"names":["Spinner","React","scaleCategory20","InteractiveForceGraph","ForceGraphNode","ForceGraphLink","SocialNodeGraph","nodeGraphData","scale","height","width","alpha","animate","node","console","log","nodes","length","map","id","label","income","links","link","source","target"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,kBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,UAAhC;AACA,SACCC,qBADD,EAECC,cAFD,EAGCC,cAHD,QAIO,iBAJP,C,CAKA;;AAcA,SAASC,eAAT,OAIO;AAAA;;AAAA,MAHNC,aAGM,QAHNA,aAGM;AACH,MAAMC,KAAK,GAAGN,eAAe,EAA7B;AACH,sBACO,QAAC,qBAAD;AACI,IAAA,SAAS,EAAC,QADd;AAEL,IAAA,iBAAiB,EAAE;AAAEO,MAAAA,MAAM,EAAE,GAAV;AAAeC,MAAAA,KAAK,EAAE,IAAtB;AAA4BC,MAAAA,KAAK,EAAE,CAAnC;AAAsCC,MAAAA,OAAO,EAAE;AAA/C,KAFd;AAGL,IAAA,SAAS,EAAC,QAHL;AAIL,IAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,aAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAV;AAAA,KAJT;AAKL,IAAA,qBAAqB,MALhB;AAAA,eAOJN,aAAa,CAACS,KAAd,CAAoBC,MAApB,IAA8B,CAA9B,gBACA,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADA,GAGAV,aAAa,CAACS,KAAd,CAAoBE,GAApB,CAAwB,UAACL,IAAD;AAAA,0BACvB,QAAC,cAAD;AAEC,QAAA,IAAI,EAAE;AAAEM,UAAAA,EAAE,EAAEN,IAAI,CAACM,EAAX;AAAeC,UAAAA,KAAK,EAAEP,IAAI,CAACM,EAA3B;AAA8BE,UAAAA,MAAM,EAACR,IAAI,CAACQ;AAA1C,SAFP;AAGC,QAAA,IAAI,EAAEb,KAAK,CAAEK,IAAI,CAACQ,MAAL,GAAY,IAAb,GAAoB,EAArB;AAHZ,SACMR,IAAI,CAACM,EADX;AAAA;AAAA;AAAA;AAAA,eADuB;AAAA,KAAxB,CAVI,EAkBJZ,aAAa,CAACS,KAAd,CAAoBC,MAApB,IAA8B,CAA9B,gBACA,qCADA,GAGAV,aAAa,CAACe,KAAd,CAAoBJ,GAApB,CAAwB,UAACK,IAAD;AAAA,0BACvB,QAAC,cAAD;AAEC,QAAA,IAAI,EAAE;AAAEC,UAAAA,MAAM,EAAED,IAAI,CAACC,MAAf;AAAuBC,UAAAA,MAAM,EAAEF,IAAI,CAACE;AAApC,SAFP;AAGC,QAAA,IAAI,EAAC;AAHN,SACMF,IAAI,CAACC,MAAL,GAAcD,IAAI,CAACE,MADzB;AAAA;AAAA;AAAA;AAAA,eADuB;AAAA,KAAxB,CArBI;AAAA;AAAA;AAAA;AAAA;AAAA,UADP;AAgCA;;KAtCQnB,e;AAuCT,eAAeA,eAAf","sourcesContent":["import { Spinner } from '@chakra-ui/react';\nimport React from 'react';\nimport { scaleCategory20 } from 'd3-scale';\nimport {\n\tInteractiveForceGraph,\n\tForceGraphNode,\n\tForceGraphLink,\n} from 'react-vis-force';\n// data structure definitions for NodeGraph component\ninterface links {\n\tsource: string;\n\ttarget: string;\n}\ninterface nodes {\n    id: string;\n    income: number;\n}\ninterface nodeGraphDataStruct {\n\tnodes: nodes[];\n\tlinks: links[];\n}\n\nfunction SocialNodeGraph({\n\tnodeGraphData,\n}: {\n\tnodeGraphData: nodeGraphDataStruct;\n    }) {\n    const scale = scaleCategory20();\n\treturn (\n        <InteractiveForceGraph\n            animation=\"wobbly\"\n\t\t\tsimulationOptions={{ height: 500, width: 1000, alpha: 1, animate: true}}\n\t\t\tlabelAttr=\"income\"\n\t\t\tonSelectNode={(node) => console.log(node)}\n\t\t\thighlightDependencies\n\t\t>\n\t\t\t{nodeGraphData.nodes.length == 0 ? (\n\t\t\t\t<Spinner />\n\t\t\t) : (\n\t\t\t\tnodeGraphData.nodes.map((node) => (\n\t\t\t\t\t<ForceGraphNode\n\t\t\t\t\t\tkey={node.id}\n\t\t\t\t\t\tnode={{ id: node.id, label: node.id,income:node.income }}\n\t\t\t\t\t\tfill={scale((node.income/1000) %10)}\n\t\t\t\t\t/>\n\t\t\t\t))\n\t\t\t)}\n\t\t\t{nodeGraphData.nodes.length == 0 ? (\n\t\t\t\t<></>\n\t\t\t) : (\n\t\t\t\tnodeGraphData.links.map((link) => (\n\t\t\t\t\t<ForceGraphLink\n\t\t\t\t\t\tkey={link.source + link.target}\n\t\t\t\t\t\tlink={{ source: link.source, target: link.target }}\n\t\t\t\t\t\tfill=\"blue\"\n\t\t\t\t\t/>\n\t\t\t\t))\n\t\t\t)}\n\t\t</InteractiveForceGraph>\n\t);\n}\nexport default SocialNodeGraph;\n"]},"metadata":{},"sourceType":"module"}