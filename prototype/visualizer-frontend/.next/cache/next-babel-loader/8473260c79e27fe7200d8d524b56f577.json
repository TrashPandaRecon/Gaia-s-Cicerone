{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Flex, Skeleton } from '@chakra-ui/react';\nimport React from 'react';\nimport { scaleCategory20 } from 'd3-scale';\nimport { InteractiveForceGraph, ForceGraphNode, ForceGraphLink } from 'react-vis-force';\nimport { SingletonSocket } from '../SingletonSocket';\n\nvar socketIOClient = require('socket.io-client'); // data structure definitions for NodeGraph component\n\n\nvar SocialNodeGraph = /*#__PURE__*/function (_React$Component) {\n  _inherits(SocialNodeGraph, _React$Component);\n\n  var _super = _createSuper(SocialNodeGraph);\n\n  function SocialNodeGraph(props) {\n    var _this;\n\n    _classCallCheck(this, SocialNodeGraph);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"scale\", scaleCategory20());\n\n    _this.state = {\n      socialdataresponse: {\n        nodes: [],\n        links: []\n      },\n      dataPipe: _this.props.dataPipe,\n      socketConnection: SingletonSocket.getInstance().getSocket()\n    };\n    return _this;\n  }\n\n  _createClass(SocialNodeGraph, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          socketConnection = _this$state.socketConnection,\n          dataPipe = _this$state.dataPipe;\n      socketConnection.on(dataPipe, function (data) {\n        return _this2.setState({\n          socialdataresponse: data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var socialdataresponse = this.state.socialdataresponse;\n      return /*#__PURE__*/_jsx(_Fragment, {\n        children: socialdataresponse.nodes.length == 0 ? /*#__PURE__*/_jsx(Skeleton, {\n          height: \"500px\"\n        }) : /*#__PURE__*/_jsx(Flex, {\n          p: \"4\",\n          children: /*#__PURE__*/_jsxs(InteractiveForceGraph, {\n            animation: \"wobbly\",\n            simulationOptions: {\n              height: 500,\n              width: 1000,\n              alpha: 1,\n              animate: true\n            },\n            labelAttr: \"label\",\n            highlightDependencies: true,\n            children: [socialdataresponse.nodes.map(function (node) {\n              return /*#__PURE__*/_jsx(ForceGraphNode, {\n                node: {\n                  id: node.id,\n                  label: JSON.stringify(node),\n                  radius: Math.ceil(node.income / 1000 % 10)\n                },\n                fill: _this3.scale(Math.ceil(node.income / 1000 % 10))\n              }, node.id);\n            }), socialdataresponse.links.map(function (link) {\n              return /*#__PURE__*/_jsx(ForceGraphLink, {\n                link: {\n                  source: link.source,\n                  target: link.target,\n                  value: 5 // this value is just to fix a bug in the library that prevents the node graph from being centered in the frame.\n\n                },\n                fill: \"blue\"\n              }, link.source + link.target);\n            })]\n          })\n        })\n      });\n    }\n  }]);\n\n  return SocialNodeGraph;\n}(React.Component);\n\nexport default SocialNodeGraph;","map":null,"metadata":{},"sourceType":"module"}