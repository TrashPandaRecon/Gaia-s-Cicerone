{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/will/Desktop/dev/SDE/prototype/visualizer-frontend/src/components/RatingChart.tsx\";\nimport React from 'react';\nimport 'react-vis/dist/style.css';\nimport { SingletonSocket } from '../SingletonSocket';\nimport { RadialChart as RChart, CircularGridLines } from 'react-vis';\nimport { Flex, Skeleton } from '@chakra-ui/react';\nimport theme from '../theme';\n\nclass RadialChart extends React.Component {\n  constructor(props) {\n    super(props);\n    var itemArray = [];\n\n    for (let i = 0; i < this.props.dataPipe.length; i++) {\n      itemArray.push({\n        title: this.props.dataPipe[i]\n      });\n    }\n\n    this.state = {\n      dataStorage: [],\n      dataPipe: this.props.dataPipe,\n      socketConnection: SingletonSocket.getInstance().getSocket(),\n      items: itemArray,\n      value: null\n    };\n    const {\n      dataPipe,\n      socketConnection,\n      dataStorage\n    } = this.state;\n\n    for (let i = 0; i < dataPipe.length; i++) {\n      socketConnection.on(dataPipe[i], data => {\n        console.log(dataStorage);\n        var scaledRadius = +(1 / 6 * 5 / 5 * data.radius).toFixed(2);\n        f;\n        dataStorage.push({\n          angle: 1,\n          radius: scaledRadius,\n          label: data.label\n        });\n      });\n    }\n\n    console.log(this.state.dataStorage);\n  }\n\n  componentDidMount() {\n    const {\n      dataPipe,\n      socketConnection,\n      dataStorage\n    } = this.state;\n\n    for (let i = 0; i < dataPipe.length; i++) {\n      socketConnection.on(dataPipe[i], data => {\n        var scaledRadius = +(1 / 6 * 5 / 5 * data.radius).toFixed(7);\n        dataStorage.splice(i, 1, {\n          angle: 1,\n          radius: scaledRadius,\n          label: data.label\n        });\n        this.setState({\n          dataStorage: dataStorage\n        });\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    const {\n      dataPipe,\n      socketConnection\n    } = this.state;\n\n    for (let i = 0; i < dataPipe.length; i++) {\n      socketConnection.off(dataPipe[i], data => {});\n    }\n  }\n\n  ElementDefined(value) {\n    return typeof value == 'object';\n  }\n\n  render() {\n    const {\n      dataStorage,\n      value,\n      items\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Flex, {\n      p: \"1\",\n      children: dataStorage.length != 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(RChart, {\n          width: this.props.width,\n          height: this.props.height,\n          data: dataStorage,\n          animation: true,\n          labelsRadiusMultiplier: 1.3,\n          labelsStyle: {\n            fontSize: theme.fontSizes.sm,\n            fill: '#222'\n          },\n          showLabels: true,\n          radius: this.props.width / 2,\n          children: /*#__PURE__*/_jsxDEV(CircularGridLines, {\n            tickTotal: 6,\n            tickValues: [...new Array(6)].map((v, i) => i / 6 - 1),\n            style: {\n              stroke: '#666262',\n              strokeOpacity: 0.4\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 7\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(Skeleton, {\n        height: this.props.height.toString() + 'px',\n        width: this.props.width.toString() + 'px'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default RadialChart;","map":{"version":3,"sources":["/Users/will/Desktop/dev/SDE/prototype/visualizer-frontend/src/components/RatingChart.tsx"],"names":["React","SingletonSocket","RadialChart","RChart","CircularGridLines","Flex","Skeleton","theme","Component","constructor","props","itemArray","i","dataPipe","length","push","title","state","dataStorage","socketConnection","getInstance","getSocket","items","value","on","data","console","log","scaledRadius","radius","toFixed","f","angle","label","componentDidMount","splice","setState","componentWillUnmount","off","ElementDefined","render","width","height","fontSize","fontSizes","sm","fill","Array","map","v","stroke","strokeOpacity","toString"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'react-vis/dist/style.css';\nimport { SingletonSocket } from '../SingletonSocket';\nimport { RadialChart as RChart, CircularGridLines } from 'react-vis';\nimport * as d3 from 'd3';\nimport { Box, Flex, Grid, GridItem, Skeleton } from '@chakra-ui/react';\nimport theme from '../theme';\nimport {ENETUNREACH} from 'constants';\n\n// This radial chart is specifically only for showing scores out of 5.\ninterface ResponseStruct {\n\tangle: number;\n\tradius: number;\n\tlabel: string;\n\tsubLabel?: string;\n}\n\ninterface DataProps {\n\tdataStorage: ResponseStruct[];\n\tdataPipe: string[];\n\tsocketConnection: any;\n\tvalue?: any;\n\titems?: any;\n}\n\nclass RadialChart extends React.Component<\n\t{ dataPipe: string[]; height: number; width: number },\n\tDataProps\n> {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tvar itemArray = [];\n\t\tfor (let i = 0; i < this.props.dataPipe.length; i++) {\n\t\t\titemArray.push({ title: this.props.dataPipe[i] });\n\t\t}\n\t\tthis.state = {\n\t\t\tdataStorage: [],\n\t\t\tdataPipe: this.props.dataPipe,\n\t\t\tsocketConnection: SingletonSocket.getInstance().getSocket(),\n\t\t\titems: itemArray,\n\t\t\tvalue: null,\n\t\t};\n\t\tconst { dataPipe, socketConnection, dataStorage } = this.state;\n\t\tfor (let i = 0; i < dataPipe.length; i++) {\n\t\t\tsocketConnection.on(dataPipe[i], (data) => {\n\t\t\t\tconsole.log(dataStorage)\n                var scaledRadius = +((((1 / 6) * 5) / 5) * data.radius).toFixed(2);\n                f\n\t\t\t\tdataStorage.push({\n\t\t\t\t\tangle: 1,\n\t\t\t\t\tradius: scaledRadius,\n\t\t\t\t\tlabel: data.label,\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\tconsole.log(this.state.dataStorage);\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { dataPipe, socketConnection, dataStorage } = this.state;\n\n\t\tfor (let i = 0; i < dataPipe.length; i++) {\n\t\t\tsocketConnection.on(dataPipe[i], (data) => {\n\t\t\t\tvar scaledRadius = +((((1 / 6) * 5) / 5) * data.radius).toFixed(7);\n\t\t\t\tdataStorage.splice(i, 1, {\n\t\t\t\t\tangle: 1,\n\t\t\t\t\tradius: scaledRadius,\n\t\t\t\t\tlabel: data.label,\n\t\t\t\t});\n\t\t\t\tthis.setState({ dataStorage: dataStorage });\n\t\t\t});\n\t\t}\n\t}\n\tcomponentWillUnmount() {\n\t\tconst { dataPipe, socketConnection } = this.state;\n\t\tfor (let i = 0; i < dataPipe.length; i++) {\n\t\t\tsocketConnection.off(dataPipe[i], (data) => {});\n\t\t}\n\t}\n\tElementDefined(value) {\n\t\treturn typeof value == 'object';\n\t}\n\trender() {\n\t\tconst { dataStorage, value, items } = this.state;\n\n\t\treturn (\n\t\t\t<Flex p=\"1\">\n\t\t\t\t{dataStorage.length != 0 ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<RChart\n\t\t\t\t\t\t\twidth={this.props.width}\n\t\t\t\t\t\t\theight={this.props.height}\n\t\t\t\t\t\t\tdata={dataStorage}\n\t\t\t\t\t\t\tanimation={true}\n\t\t\t\t\t\t\tlabelsRadiusMultiplier={1.3}\n\t\t\t\t\t\t\tlabelsStyle={{ fontSize: theme.fontSizes.sm, fill: '#222' }}\n\t\t\t\t\t\t\tshowLabels={true}\n\t\t\t\t\t\t\tradius={this.props.width / 2}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<CircularGridLines\n\t\t\t\t\t\t\t\ttickTotal={6}\n\t\t\t\t\t\t\t\ttickValues={[...new Array(6)].map((v, i) => i / 6 - 1)}\n\t\t\t\t\t\t\t\tstyle={{ stroke: '#666262', strokeOpacity: 0.4 }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</RChart>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<Skeleton\n\t\t\t\t\t\theight={this.props.height.toString() + 'px'}\n\t\t\t\t\t\twidth={this.props.width.toString() + 'px'}\n\t\t\t\t\t></Skeleton>\n\t\t\t\t)}\n\t\t\t</Flex>\n\t\t);\n\t}\n}\n\nexport default RadialChart;\n"]},"metadata":{},"sourceType":"module"}