{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/will/Desktop/dev/SDE/prototype/visualizer-frontend/src/components/SocialNodeGraph.tsx\",\n    _s = $RefreshSig$();\n\nimport { Spinner } from '@chakra-ui/react';\nimport React from 'react'; // importing as NodeGraph because React also has Graph and gets confused, causing undefined type in React.createElement\n\nimport { Graph as NodeGraph } from 'react-d3-graph'; // data structure definitions for NodeGraph component\n\nfunction SocialNodeGraph(_ref) {\n  _s();\n\n  var nodeGraphData = _ref.nodeGraphData;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      shouldRender = _React$useState2[0],\n      setShouldRender = _React$useState2[1];\n\n  React.useEffect(function () {\n    var timeout = setTimeout(function () {\n      return setShouldRender(true);\n    }, 1000);\n    return function () {\n      return clearTimeout(timeout);\n    };\n  }, []);\n  var myConfig = {\n    nodeHighlightBehavior: true,\n    height: 500,\n    width: 1000,\n    node: {\n      color: 'steelblue',\n      size: 120,\n      highlightStrokeColor: 'blue'\n    },\n    link: {\n      highlightColor: 'lightblue'\n    }\n  };\n\n  var onClickNode = function onClickNode(nodeId) {\n    window.alert(\"\".concat(nodeId, \" is probably human?\"));\n  };\n\n  var onClickLink = function onClickLink(source, target) {\n    window.alert(\"\".concat(source, \" is friends with \").concat(target));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !shouldRender ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(NodeGraph, {\n      id: \"socialNetGraph\" // id is mandatory\n      ,\n      data: nodeGraphData,\n      config: myConfig,\n      onClickNode: onClickNode,\n      onClickLink: onClickLink\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(SocialNodeGraph, \"Fhs21UGsY73quT1EkyYQ4s17rB8=\");\n\n_c = SocialNodeGraph;\nexport default SocialNodeGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"SocialNodeGraph\");","map":{"version":3,"sources":["/Users/will/Desktop/dev/SDE/prototype/visualizer-frontend/src/components/SocialNodeGraph.tsx"],"names":["Spinner","React","Graph","NodeGraph","SocialNodeGraph","nodeGraphData","useState","shouldRender","setShouldRender","useEffect","timeout","setTimeout","clearTimeout","myConfig","nodeHighlightBehavior","height","width","node","color","size","highlightStrokeColor","link","highlightColor","onClickNode","nodeId","window","alert","onClickLink","source","target"],"mappings":";;;;;;;AAAA,SAASA,OAAT,QAAwB,kBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,KAAK,IAAIC,SAAlB,QAAmC,gBAAnC,C,CACA;;AAaA,SAASC,eAAT,OAIG;AAAA;;AAAA,MAHFC,aAGE,QAHFA,aAGE;;AAAA,wBACsCJ,KAAK,CAACK,QAAN,CAAe,KAAf,CADtC;AAAA;AAAA,MACKC,YADL;AAAA,MACmBC,eADnB;;AAEFP,EAAAA,KAAK,CAACQ,SAAN,CAAgB,YAAM;AACrB,QAAMC,OAAO,GAAGC,UAAU,CAAC;AAAA,aAAMH,eAAe,CAAC,IAAD,CAArB;AAAA,KAAD,EAA8B,IAA9B,CAA1B;AAEA,WAAO;AAAA,aAAMI,YAAY,CAACF,OAAD,CAAlB;AAAA,KAAP;AACA,GAJD,EAIG,EAJH;AAKA,MAAMG,QAAQ,GAAG;AAChBC,IAAAA,qBAAqB,EAAE,IADP;AAEhBC,IAAAA,MAAM,EAAE,GAFQ;AAGhBC,IAAAA,KAAK,EAAE,IAHS;AAKhBC,IAAAA,IAAI,EAAE;AACLC,MAAAA,KAAK,EAAE,WADF;AAELC,MAAAA,IAAI,EAAE,GAFD;AAGLC,MAAAA,oBAAoB,EAAE;AAHjB,KALU;AAUhBC,IAAAA,IAAI,EAAE;AACLC,MAAAA,cAAc,EAAE;AADX;AAVU,GAAjB;;AAeA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAAUC,MAAV,EAAkB;AACrCC,IAAAA,MAAM,CAACC,KAAP,WAAgBF,MAAhB;AACA,GAFD;;AAIA,MAAMG,WAAW,GAAG,SAAdA,WAAc,CAAUC,MAAV,EAAkBC,MAAlB,EAA0B;AAC7CJ,IAAAA,MAAM,CAACC,KAAP,WAAgBE,MAAhB,8BAA0CC,MAA1C;AACA,GAFD;;AAIA,sBACC;AAAA,cACE,CAACtB,YAAD,gBACA,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADA,gBAGA,QAAC,SAAD;AACC,MAAA,EAAE,EAAC,gBADJ,CACqB;AADrB;AAEC,MAAA,IAAI,EAAEF,aAFP;AAGC,MAAA,MAAM,EAAEQ,QAHT;AAIC,MAAA,WAAW,EAAEU,WAJd;AAKC,MAAA,WAAW,EAAEI;AALd;AAAA;AAAA;AAAA;AAAA;AAJF,mBADD;AAeA;;GAjDQvB,e;;KAAAA,e;AAkDT,eAAeA,eAAf","sourcesContent":["import { Spinner } from '@chakra-ui/react';\nimport React from 'react';\n// importing as NodeGraph because React also has Graph and gets confused, causing undefined type in React.createElement\nimport { Graph as NodeGraph } from 'react-d3-graph';\n// data structure definitions for NodeGraph component\ninterface links {\n\tsource: string;\n\ttarget: string;\n}\ninterface nodes {\n\tid: string;\n}\ninterface nodeGraphDataStruct {\n\tnodes: nodes[];\n\tlinks: links[];\n}\n\nfunction SocialNodeGraph({\n\tnodeGraphData,\n}: {\n\tnodeGraphData: nodeGraphDataStruct;\n}) {\n\tconst [shouldRender, setShouldRender] = React.useState(false);\n\tReact.useEffect(() => {\n\t\tconst timeout = setTimeout(() => setShouldRender(true), 1000);\n\n\t\treturn () => clearTimeout(timeout);\n\t}, []);\n\tconst myConfig = {\n\t\tnodeHighlightBehavior: true,\n\t\theight: 500,\n\t\twidth: 1000,\n\n\t\tnode: {\n\t\t\tcolor: 'steelblue',\n\t\t\tsize: 120,\n\t\t\thighlightStrokeColor: 'blue',\n\t\t},\n\t\tlink: {\n\t\t\thighlightColor: 'lightblue',\n\t\t},\n\t};\n\n\tconst onClickNode = function (nodeId) {\n\t\twindow.alert(`${nodeId} is probably human?`);\n\t};\n\n\tconst onClickLink = function (source, target) {\n\t\twindow.alert(`${source} is friends with ${target}`);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{!shouldRender ? (\n\t\t\t\t<Spinner></Spinner>\n\t\t\t) : (\n\t\t\t\t<NodeGraph\n\t\t\t\t\tid=\"socialNetGraph\" // id is mandatory\n\t\t\t\t\tdata={nodeGraphData}\n\t\t\t\t\tconfig={myConfig}\n\t\t\t\t\tonClickNode={onClickNode}\n\t\t\t\t\tonClickLink={onClickLink}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</>\n\t);\n}\nexport default SocialNodeGraph;\n"]},"metadata":{},"sourceType":"module"}