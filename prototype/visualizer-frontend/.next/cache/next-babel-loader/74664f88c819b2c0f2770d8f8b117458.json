{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/will/Desktop/dev/SDE/prototype/visualizer-frontend/src/components/BarChart.tsx\";\nimport React from 'react';\nimport { SALESDATA } from '../data';\nimport { SingletonSocket } from '../SingletonSocket';\nimport { XYPlot, XAxis, YAxis, VerticalGridLines, HorizontalGridLines, VerticalBarSeries } from 'react-vis';\nimport * as d3 from 'd3';\nimport fonts from \"../theme\";\n\nclass BarChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      graphdata: [],\n      dataPipe: this.props.dataPipe,\n      yAxisName: this.props.yAxisName,\n      socketConnection: SingletonSocket.getInstance().getSocket()\n    };\n  }\n\n  componentDidMount() {\n    const {\n      dataPipe,\n      socketConnection\n    } = this.state;\n    socketConnection.on(dataPipe, data => {\n      this.setState({\n        graphdata: data\n      });\n    });\n  }\n\n  render() {\n    const {\n      graphdata,\n      yAxisName\n    } = this.state;\n    const labelData = SALESDATA.map((d, idx) => ({\n      x: d.x,\n      y: Math.max(SALESDATA[idx].y)\n    }));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(XYPlot, {\n        xType: \"ordinal\",\n        width: 750,\n        height: 500,\n        xDistance: 100,\n        animate: true,\n        style: {\n          fontSize: fonts.fontSizes.sm\n        },\n        children: [/*#__PURE__*/_jsxDEV(VerticalGridLines, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(HorizontalGridLines, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          title: \"visitors\",\n          position: \"middle\",\n          tickLabelAngle: 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          tickFormat: tick => d3.format('.2s')(tick)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(VerticalBarSeries, {\n          className: \"vertical-bar-series-example\",\n          data: SALESDATA\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 6\n    }, this);\n  }\n\n}\n\nexport default BarChart;","map":{"version":3,"sources":["/Users/will/Desktop/dev/SDE/prototype/visualizer-frontend/src/components/BarChart.tsx"],"names":["React","SALESDATA","SingletonSocket","XYPlot","XAxis","YAxis","VerticalGridLines","HorizontalGridLines","VerticalBarSeries","d3","fonts","BarChart","Component","constructor","props","state","graphdata","dataPipe","yAxisName","socketConnection","getInstance","getSocket","componentDidMount","on","data","setState","render","labelData","map","d","idx","x","y","Math","max","fontSize","fontSizes","sm","tick","format"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,SAAxB;AACA,SAAQC,eAAR,QAA8B,oBAA9B;AAEA,SACCC,MADD,EAECC,KAFD,EAGCC,KAHD,EAICC,iBAJD,EAKCC,mBALD,EAMCC,iBAND,QASO,WATP;AAUA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AAIA,OAAOC,KAAP,MAAkB,UAAlB;;AAYA,MAAMC,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAGE;AACDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,SAAS,EAAE,EADC;AAEZC,MAAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWG,QAFT;AAGHC,MAAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWI,SAHnB;AAIHC,MAAAA,gBAAgB,EAAEjB,eAAe,CAACkB,WAAhB,GAA8BC,SAA9B;AAJf,KAAb;AAMG;;AAEJC,EAAAA,iBAAiB,GAAG;AACnB,UAAM;AAACL,MAAAA,QAAD;AAAUE,MAAAA;AAAV,QAA+B,KAAKJ,KAA1C;AACMI,IAAAA,gBAAgB,CAACI,EAAjB,CAAoBN,QAApB,EAA+BO,IAAD,IAAU;AACpC,WAAKC,QAAL,CAAc;AAACT,QAAAA,SAAS,EAAEQ;AAAZ,OAAd;AACH,KAFD;AAGH;;AAEDE,EAAAA,MAAM,GAAG;AACL,UAAM;AAACV,MAAAA,SAAD;AAAYE,MAAAA;AAAZ,QAAyB,KAAKH,KAApC;AACA,UAAMY,SAAS,GAAG1B,SAAS,CAAC2B,GAAV,CAAc,CAACC,CAAD,EAAIC,GAAJ,MAAa;AAChDC,MAAAA,CAAC,EAAEF,CAAC,CAACE,CAD2C;AAEhDC,MAAAA,CAAC,EAAEC,IAAI,CAACC,GAAL,CAASjC,SAAS,CAAC6B,GAAD,CAAT,CAAeE,CAAxB;AAF6C,KAAb,CAAd,CAAlB;AAIA,wBACH;AAAA,6BACC,QAAC,MAAD;AACC,QAAA,KAAK,EAAC,SADP;AAEC,QAAA,KAAK,EAAE,GAFR;AAGC,QAAA,MAAM,EAAE,GAHT;AAIC,QAAA,SAAS,EAAE,GAJZ;AAKc,QAAA,OAAO,MALrB;AAMc,QAAA,KAAK,EAAE;AAACG,UAAAA,QAAQ,EAACzB,KAAK,CAAC0B,SAAN,CAAgBC;AAA1B,SANrB;AAAA,gCAQC,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,gBARD,eASC,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,gBATD,eAUc,QAAC,KAAD;AACI,UAAA,KAAK,EAAC,UADV;AAEI,UAAA,QAAQ,EAAC,QAFb;AAGZ,UAAA,cAAc,EAAE;AAHJ;AAAA;AAAA;AAAA;AAAA,gBAVd,eAeC,QAAC,KAAD;AAAO,UAAA,UAAU,EAAGC,IAAD,IAAU7B,EAAE,CAAC8B,MAAH,CAAU,KAAV,EAAiBD,IAAjB;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAfD,eAgBC,QAAC,iBAAD;AACC,UAAA,SAAS,EAAC,6BADX;AAEiB,UAAA,IAAI,EAAErC;AAFvB;AAAA;AAAA;AAAA;AAAA,gBAhBD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADG;AAyBN;;AAjDA;;AAoDF,eAAeU,QAAf","sourcesContent":["\nimport React from 'react';\nimport {SALESDATA} from '../data';\nimport {SingletonSocket} from '../SingletonSocket';\nimport DrawD3BarChart from './D3Components/DrawD3BarChart';\nimport {\n\tXYPlot,\n\tXAxis,\n\tYAxis,\n\tVerticalGridLines,\n\tHorizontalGridLines,\n\tVerticalBarSeries,\n\tVerticalBarSeriesCanvas,\n\tLabelSeries,\n} from 'react-vis';\nimport * as d3 from 'd3';\nimport {useTheme} from '@chakra-ui/react';\nimport {NavBarButtons} from './NavBarButtons';\nimport {formatWithOptions} from 'util';\nimport fonts from \"../theme\"\ninterface XYResponseStruct {\n\tx: string;\n\ty: number;\n}\ninterface XYDataProps {\n\tgraphdata: XYResponseStruct[];\n    dataPipe: string;\n    yAxisName: string;\n    socketConnection: any\n}\n\nclass BarChart extends React.Component<\n    {dataPipe: string; yAxisName: string;},\n\tXYDataProps\n> {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tgraphdata: [],\n\t\t\tdataPipe: this.props.dataPipe,\n            yAxisName: this.props.yAxisName,\n            socketConnection: SingletonSocket.getInstance().getSocket()\n\t\t};\n    }\n    \n\tcomponentDidMount() {\n\t\tconst {dataPipe,socketConnection } = this.state;\n        socketConnection.on(dataPipe, (data) => {\n            this.setState({graphdata: data})\n        });\n    }\n  \n    render() {\n        const {graphdata, yAxisName} = this.state;\n        const labelData = SALESDATA.map((d, idx) => ({\n\t\t\t\t\tx: d.x,\n\t\t\t\t\ty: Math.max(SALESDATA[idx].y),\n\t\t\t\t}));\n        return (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<XYPlot\n\t\t\t\t\t\t\txType=\"ordinal\"\n\t\t\t\t\t\t\twidth={750}\n\t\t\t\t\t\t\theight={500}\n\t\t\t\t\t\t\txDistance={100}\n                    animate\n                    style={{fontSize:fonts.fontSizes.sm}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<VerticalGridLines />\n\t\t\t\t\t\t\t<HorizontalGridLines />\n                    <XAxis\n                        title=\"visitors\"\n                        position=\"middle\"\n\t\t\t\t\t\t\t\ttickLabelAngle={0}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<YAxis tickFormat={(tick) => d3.format('.2s')(tick)} />\n\t\t\t\t\t\t\t<VerticalBarSeries\n\t\t\t\t\t\t\t\tclassName=\"vertical-bar-series-example\"\n                        data={SALESDATA}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</XYPlot>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t}\n}\n\nexport default BarChart;\n"]},"metadata":{},"sourceType":"module"}