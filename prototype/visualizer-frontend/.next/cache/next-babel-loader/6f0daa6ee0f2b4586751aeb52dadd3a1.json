{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/will/Desktop/dev/SDE/prototype/visualizer-frontend/src/components/SocialNodeGraph.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Flex, Skeleton } from '@chakra-ui/react';\nimport React from 'react';\nimport { scaleCategory20 } from 'd3-scale';\nimport { InteractiveForceGraph, ForceGraphNode, ForceGraphLink } from 'react-vis-force';\nimport { SingletonSocket } from '../SingletonSocket';\n\nvar socketIOClient = require('socket.io-client'); // data structure definitions for NodeGraph component\n\n\nvar SocialNodeGraph = /*#__PURE__*/function (_React$Component) {\n  _inherits(SocialNodeGraph, _React$Component);\n\n  var _super = _createSuper(SocialNodeGraph);\n\n  function SocialNodeGraph(props) {\n    var _this;\n\n    _classCallCheck(this, SocialNodeGraph);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"scale\", scaleCategory20());\n\n    _this.state = {\n      socialdataresponse: {\n        nodes: [],\n        links: []\n      },\n      dataPipe: _this.props.dataPipe,\n      socketConnection: SingletonSocket.getInstance().getSocket()\n    };\n    return _this;\n  }\n\n  _createClass(SocialNodeGraph, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          socketConnection = _this$state.socketConnection,\n          dataPipe = _this$state.dataPipe;\n      socketConnection.on(dataPipe, function (data) {\n        return _this2.setState({\n          socialdataresponse: data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var socialdataresponse = this.state.socialdataresponse;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Flex, {\n          p: \"4\",\n          children: /*#__PURE__*/_jsxDEV(InteractiveForceGraph, {\n            animation: \"wobbly\",\n            simulationOptions: {\n              height: 500,\n              width: 1000,\n              alpha: 1,\n              animate: true\n            },\n            labelAttr: \"label\",\n            highlightDependencies: true,\n            children: [socialdataresponse.nodes.length == 0 ? /*#__PURE__*/_jsxDEV(Skeleton, {\n              height: \"500px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 8\n            }, this) : socialdataresponse.nodes.map(function (node) {\n              return /*#__PURE__*/_jsxDEV(ForceGraphNode, {\n                node: {\n                  id: node.id,\n                  label: JSON.stringify(node),\n                  radius: Math.ceil(node.income / 1000 % 10)\n                },\n                fill: _this3.scale(Math.ceil(node.income / 1000 % 10))\n              }, node.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 9\n              }, _this3);\n            }), socialdataresponse.nodes.length == 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : socialdataresponse.links.map(function (link) {\n              return /*#__PURE__*/_jsxDEV(ForceGraphLink, {\n                link: {\n                  source: link.source,\n                  target: link.target,\n                  value: 5 // this value is just to fix a bug in the library that prevents the node graph from being centered in the frame.\n\n                },\n                fill: \"blue\"\n              }, link.source + link.target, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 9\n              }, _this3);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 5\n        }, this)\n      }, void 0, false);\n    }\n  }]);\n\n  return SocialNodeGraph;\n}(React.Component);\n\nexport default SocialNodeGraph;","map":{"version":3,"sources":["/Users/will/Desktop/dev/SDE/prototype/visualizer-frontend/src/components/SocialNodeGraph.tsx"],"names":["Flex","Skeleton","React","scaleCategory20","InteractiveForceGraph","ForceGraphNode","ForceGraphLink","SingletonSocket","socketIOClient","require","SocialNodeGraph","props","state","socialdataresponse","nodes","links","dataPipe","socketConnection","getInstance","getSocket","on","data","setState","height","width","alpha","animate","length","map","node","id","label","JSON","stringify","radius","Math","ceil","income","scale","link","source","target","value","Component"],"mappings":";;;;;;;;;;;;;;;AAAA,SAASA,IAAT,EAAeC,QAAf,QAA8B,kBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,UAAhC;AACA,SACCC,qBADD,EAECC,cAFD,EAGCC,cAHD,QAIO,iBAJP;AAKA,SAAQC,eAAR,QAA8B,oBAA9B;;AACA,IAAMC,cAAc,GAAGC,OAAO,CAAC,kBAAD,CAA9B,C,CACA;;;IAmBMC,e;;;;;AACL,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,8BAAMA,KAAN;;AADkB,4DASXR,eAAe,EATJ;;AAElB,UAAKS,KAAL,GAAa;AACZC,MAAAA,kBAAkB,EAAE;AAAEC,QAAAA,KAAK,EAAE,EAAT;AAAaC,QAAAA,KAAK,EAAE;AAApB,OADR;AAEHC,MAAAA,QAAQ,EAAE,MAAKL,KAAL,CAAWK,QAFlB;AAGHC,MAAAA,gBAAgB,EAAEV,eAAe,CAACW,WAAhB,GAA8BC,SAA9B;AAHf,KAAb;AAFkB;AAOlB;;;;wCAGmB;AAAA;;AAAA,wBACmB,KAAKP,KADxB;AAAA,UACXK,gBADW,eACXA,gBADW;AAAA,UACMD,QADN,eACMA,QADN;AAEnBC,MAAAA,gBAAgB,CAACG,EAAjB,CAAoBJ,QAApB,EAA8B,UAACK,IAAD;AAAA,eAC7B,MAAI,CAACC,QAAL,CAAc;AAAET,UAAAA,kBAAkB,EAAEQ;AAAtB,SAAd,CAD6B;AAAA,OAA9B;AAGA;;;6BACQ;AAAA;;AAAA,UACAR,kBADA,GACuB,KAAKD,KAD5B,CACAC,kBADA;AAER,0BACC;AAAA,+BACC,QAAC,IAAD;AAAM,UAAA,CAAC,EAAC,GAAR;AAAA,iCACC,QAAC,qBAAD;AACC,YAAA,SAAS,EAAC,QADX;AAEC,YAAA,iBAAiB,EAAE;AAClBU,cAAAA,MAAM,EAAE,GADU;AAElBC,cAAAA,KAAK,EAAE,IAFW;AAGlBC,cAAAA,KAAK,EAAE,CAHW;AAIGC,cAAAA,OAAO,EAAE;AAJZ,aAFpB;AAQC,YAAA,SAAS,EAAC,OARX;AASC,YAAA,qBAAqB,MATtB;AAAA,uBAWEb,kBAAkB,CAACC,KAAnB,CAAyBa,MAAzB,IAAmC,CAAnC,gBACA,QAAC,QAAD;AAAU,cAAA,MAAM,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,oBADA,GAGAd,kBAAkB,CAACC,KAAnB,CAAyBc,GAAzB,CAA6B,UAACC,IAAD;AAAA,kCAC5B,QAAC,cAAD;AAEC,gBAAA,IAAI,EAAE;AACLC,kBAAAA,EAAE,EAAED,IAAI,CAACC,EADJ;AAELC,kBAAAA,KAAK,EAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAFF;AAGLK,kBAAAA,MAAM,EAAEC,IAAI,CAACC,IAAL,CAAWP,IAAI,CAACQ,MAAL,GAAc,IAAf,GAAuB,EAAjC;AAHH,iBAFP;AAOC,gBAAA,IAAI,EAAE,MAAI,CAACC,KAAL,CAAWH,IAAI,CAACC,IAAL,CAAWP,IAAI,CAACQ,MAAL,GAAc,IAAf,GAAuB,EAAjC,CAAX;AAPP,iBACMR,IAAI,CAACC,EADX;AAAA;AAAA;AAAA;AAAA,wBAD4B;AAAA,aAA7B,CAdF,EA0BEjB,kBAAkB,CAACC,KAAnB,CAAyBa,MAAzB,IAAmC,CAAnC,gBACA,qCADA,GAGAd,kBAAkB,CAACE,KAAnB,CAAyBa,GAAzB,CAA6B,UAACW,IAAD;AAAA,kCAC5B,QAAC,cAAD;AAEC,gBAAA,IAAI,EAAE;AACLC,kBAAAA,MAAM,EAAED,IAAI,CAACC,MADR;AAELC,kBAAAA,MAAM,EAAEF,IAAI,CAACE,MAFR;AAGLC,kBAAAA,KAAK,EAAE,CAHF,CAGK;;AAHL,iBAFP;AAOC,gBAAA,IAAI,EAAC;AAPN,iBACMH,IAAI,CAACC,MAAL,GAAcD,IAAI,CAACE,MADzB;AAAA;AAAA;AAAA;AAAA,wBAD4B;AAAA,aAA7B,CA7BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD,uBADD;AAgDA;;;;EAnE4BvC,KAAK,CAACyC,S;;AAqEpC,eAAejC,eAAf","sourcesContent":["import { Flex, Skeleton} from '@chakra-ui/react';\nimport React from 'react';\nimport { scaleCategory20 } from 'd3-scale';\nimport {\n\tInteractiveForceGraph,\n\tForceGraphNode,\n\tForceGraphLink,\n} from 'react-vis-force';\nimport {SingletonSocket} from '../SingletonSocket';\nconst socketIOClient = require('socket.io-client');\n// data structure definitions for NodeGraph component\ninterface links {\n\tsource: string;\n\ttarget: string;\n}\ninterface nodes {\n\tid: string;\n\tincome: number;\n}\nexport interface nodeGraphDataStruct {\n\tnodes: nodes[];\n\tlinks: links[];\n}\ninterface nodeGraphDataProps {\n\tsocialdataresponse: nodeGraphDataStruct;\n    socketConnection: any;\n    dataPipe: string;\n}\n\nclass SocialNodeGraph extends React.Component<{dataPipe:string}, nodeGraphDataProps> {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsocialdataresponse: { nodes: [], links: [] },\n            dataPipe: this.props.dataPipe,\n            socketConnection: SingletonSocket.getInstance().getSocket()\n\t\t};\n\t}\n\t\n\tscale = scaleCategory20();\n\tcomponentDidMount() {\n\t\tconst { socketConnection,dataPipe } = this.state;\n\t\tsocketConnection.on(dataPipe, (data) =>\n\t\t\tthis.setState({ socialdataresponse: data })\n\t\t);\n\t}\n\trender() {\n\t\tconst { socialdataresponse } = this.state;\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Flex p=\"4\">\n\t\t\t\t\t<InteractiveForceGraph\n\t\t\t\t\t\tanimation=\"wobbly\"\n\t\t\t\t\t\tsimulationOptions={{\n\t\t\t\t\t\t\theight: 500,\n\t\t\t\t\t\t\twidth: 1000,\n\t\t\t\t\t\t\talpha: 1,\n                            animate: true,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tlabelAttr=\"label\"\n\t\t\t\t\t\thighlightDependencies\n\t\t\t\t\t>\n\t\t\t\t\t\t{socialdataresponse.nodes.length == 0 ? (\n\t\t\t\t\t\t\t<Skeleton height=\"500px\"></Skeleton>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\tsocialdataresponse.nodes.map((node) => (\n\t\t\t\t\t\t\t\t<ForceGraphNode\n\t\t\t\t\t\t\t\t\tkey={node.id}\n\t\t\t\t\t\t\t\t\tnode={{\n\t\t\t\t\t\t\t\t\t\tid: node.id,\n\t\t\t\t\t\t\t\t\t\tlabel: JSON.stringify(node),\n\t\t\t\t\t\t\t\t\t\tradius: Math.ceil((node.income / 1000) % 10),\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tfill={this.scale(Math.ceil((node.income / 1000) % 10))}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{socialdataresponse.nodes.length == 0 ? (\n\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\tsocialdataresponse.links.map((link) => (\n\t\t\t\t\t\t\t\t<ForceGraphLink\n\t\t\t\t\t\t\t\t\tkey={link.source + link.target}\n\t\t\t\t\t\t\t\t\tlink={{\n\t\t\t\t\t\t\t\t\t\tsource: link.source,\n\t\t\t\t\t\t\t\t\t\ttarget: link.target,\n\t\t\t\t\t\t\t\t\t\tvalue: 5, // this value is just to fix a bug in the library that prevents the node graph from being centered in the frame.\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tfill=\"blue\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t)}\n\t\t\t\t\t</InteractiveForceGraph>\n\t\t\t\t</Flex>\n\t\t\t</>\n\t\t);\n\t}\n}\nexport default SocialNodeGraph;\n"]},"metadata":{},"sourceType":"module"}