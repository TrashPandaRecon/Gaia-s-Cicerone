{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Box } from '@chakra-ui/react';\nimport React from 'react';\nimport { Hero } from '../components/Hero';\nimport { Container } from '../components/Container';\nimport { Main } from '../components/Main';\nimport { DarkModeSwitch } from '../components/DarkModeSwitch';\nimport { Footer } from '../components/Footer';\nimport BarChart from '../components/BarChart';\nimport SocialNodeGraph from '../components/SocialNodeGraph';\nimport { ENDPOINT } from '../config';\n\nvar socketIOClient = require('socket.io-client');\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      salesresponse: [],\n      timeresponse: 0,\n      endpoint: ENDPOINT\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var endpoint = this.state.endpoint; //Very simply connect to the socket\n\n      var socket = socketIOClient(endpoint); //Listen for data on the \"outgoing data\" namespace and supply a callback for what to do when we get one. In this case, we set a state variable\n\n      socket.on('FromAPI', function (data) {\n        return _this2.setState({\n          timeresponse: data\n        });\n      });\n      socket.on('FromSalesData', function (data) {\n        return _this2.setState({\n          salesresponse: data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          timeresponse = _this$state.timeresponse,\n          salesresponse = _this$state.salesresponse;\n      return /*#__PURE__*/_jsxs(Container, {\n        children: [/*#__PURE__*/_jsx(Hero, {\n          title: \"DEMO\"\n        }), /*#__PURE__*/_jsxs(Main, {\n          children: [/*#__PURE__*/_jsxs(Box, {\n            children: [\"The date is \", timeresponse]\n          }), /*#__PURE__*/_jsx(Box, {\n            width: \"100%\",\n            children: !salesresponse ? /*#__PURE__*/_jsx(BarChart, {\n              data: {}\n            }) : /*#__PURE__*/_jsx(BarChart, {\n              data: salesresponse\n            })\n          }), /*#__PURE__*/_jsx(Box, {\n            children: /*#__PURE__*/_jsx(SocialNodeGraph, {})\n          })]\n        }), /*#__PURE__*/_jsx(DarkModeSwitch, {}), /*#__PURE__*/_jsx(Footer, {\n          children: \"Fancy Footer Information\"\n        })]\n      });\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":null,"metadata":{},"sourceType":"module"}