{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/will/Desktop/dev/SDE/prototype/visualizer-frontend/src/components/RadialChart.tsx\";\nimport React from 'react';\nimport 'react-vis/dist/style.css';\nimport { SingletonSocket } from '../SingletonSocket';\nimport { RadialChart as RChart, CircularGridLines } from 'react-vis';\nimport { Flex, Skeleton } from '@chakra-ui/react';\n\nclass RadialChart extends React.Component {\n  constructor(props) {\n    super(props);\n    var itemArray = [];\n\n    for (let i = 0; i < this.props.dataPipe.length; i++) {\n      itemArray.push({\n        title: this.props.dataPipe[i]\n      });\n    }\n\n    this.state = {\n      dataStorage: [],\n      dataPipe: this.props.dataPipe,\n      socketConnection: SingletonSocket.getInstance().getSocket(),\n      items: itemArray,\n      value: null\n    };\n  }\n\n  componentDidMount() {\n    const {\n      dataPipe,\n      socketConnection,\n      dataStorage\n    } = this.state;\n\n    for (let i = 0; i < dataPipe.length; i++) {\n      socketConnection.on(dataPipe[i], data => {\n        dataStorage.splice(i, 1, data);\n        this.setState({\n          dataStorage: dataStorage\n        });\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    const {\n      dataPipe,\n      socketConnection\n    } = this.state;\n\n    for (let i = 0; i < dataPipe.length; i++) {\n      socketConnection.off(dataPipe[i], data => {});\n    }\n  }\n\n  render() {\n    const {\n      dataStorage,\n      value,\n      items\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Flex, {\n      p: \"1\",\n      children: dataStorage.length == 0 ? /*#__PURE__*/_jsxDEV(Skeleton, {\n        height: this.props.height.toString() + 'px',\n        width: this.props.width.toString() + 'px'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(RChart, {\n          width: this.props.width,\n          height: this.props.height,\n          data: dataStorage,\n          animation: true,\n          angleRange: dataStorage.length,\n          showLabels: true,\n          children: /*#__PURE__*/_jsxDEV(CircularGridLines, {\n            tickTotal: 5,\n            tickValues: [1, 2, 3, 4, 5]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default RadialChart;","map":{"version":3,"sources":["/Users/will/Desktop/dev/SDE/prototype/visualizer-frontend/src/components/RadialChart.tsx"],"names":["React","SingletonSocket","RadialChart","RChart","CircularGridLines","Flex","Skeleton","Component","constructor","props","itemArray","i","dataPipe","length","push","title","state","dataStorage","socketConnection","getInstance","getSocket","items","value","componentDidMount","on","data","splice","setState","componentWillUnmount","off","render","height","toString","width"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'react-vis/dist/style.css';\nimport { SingletonSocket } from '../SingletonSocket';\nimport {\n    RadialChart as RChart,\n    CircularGridLines\n} from 'react-vis';\nimport * as d3 from 'd3';\nimport { Box, Flex, Grid, GridItem, Skeleton } from '@chakra-ui/react';\n\ninterface ResponseStruct {\n\tangle: number\n    radius: number\n    label: string\n    subLabel?:string\n}\n\ninterface DataProps {\n\tdataStorage: ResponseStruct[];\n\tdataPipe: string[];\n\tsocketConnection: any;\n\tvalue?: any;\n\titems?: any;\n}\n\nclass RadialChart extends React.Component<\n\t{ dataPipe: string[]; height: number; width: number },\n\tDataProps\n> {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tvar itemArray = [];\n\t\tfor (let i = 0; i < this.props.dataPipe.length; i++) {\n\t\t\titemArray.push({ title: this.props.dataPipe[i] });\n\t\t}\n\t\tthis.state = {\n\t\t\tdataStorage: [],\n\t\t\tdataPipe: this.props.dataPipe,\n\t\t\tsocketConnection: SingletonSocket.getInstance().getSocket(),\n\t\t\titems: itemArray,\n\t\t\tvalue: null,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { dataPipe, socketConnection, dataStorage } = this.state;\n\t\tfor (let i = 0; i < dataPipe.length; i++) {\n\t\t\tsocketConnection.on(dataPipe[i], (data) => {\n\t\t\t\tdataStorage.splice(i, 1, data);\n\t\t\t\tthis.setState({ dataStorage: dataStorage });\n\t\t\t});\n\t\t}\n\t}\n\tcomponentWillUnmount() {\n\t\tconst { dataPipe, socketConnection } = this.state;\n\t\tfor (let i = 0; i < dataPipe.length; i++) {\n\t\t\tsocketConnection.off(dataPipe[i], (data) => {});\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { dataStorage, value, items } = this.state;\n\t\treturn (\n\t\t\t<Flex p=\"1\">\n\t\t\t\t{dataStorage.length == 0 ? (\n\t\t\t\t\t<Skeleton\n\t\t\t\t\t\theight={this.props.height.toString() + 'px'}\n\t\t\t\t\t\twidth={this.props.width.toString() + 'px'}\n\t\t\t\t\t></Skeleton>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<RChart\n\t\t\t\t\t\t\twidth={this.props.width}\n\t\t\t\t\t\t\theight={this.props.height}\n\t\t\t\t\t\t\tdata={dataStorage}\n\t\t\t\t\t\t\tanimation={true}\n\t\t\t\t\t\t\tangleRange={dataStorage.length}\n\t\t\t\t\t\t\tshowLabels={true}\n\t\t\t\t\t\t>\n                                <CircularGridLines tickTotal={5}\n                                    tickValues={[1,2,3,4,5]}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</RChart>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</Flex>\n\t\t);\n\t}\n}\n\nexport default RadialChart;\n"]},"metadata":{},"sourceType":"module"}